<?xml version="1.0" encoding="utf-8"?>

<Patch>
	<Operation Class="PatchOperationConditional">
	<!-- DO THE GENTILES KNOW? -->
	<xpath>/Defs/ThingDef[defName="AP_Snakeoil"]</xpath>
		<!-- If they do, SHUT IT DOWN. -->
		<match Class="PatchOperationRemove">
			<success>Always</success>
			<xpath>/Defs/ThingDef[defName="AP_Snakeoil"]/recipeMaker</xpath>
		</match>
		<!-- If the first XPATH does not exist, the original code stands. All according to plan. -->
	</Operation>
	
	<Operation Class="PatchOperationConditional">
	<!-- DO THE GENTILES KNOW? -->
	<xpath>/Defs/ThingDef[defName="AP_Snakeoil"]</xpath>
		<!-- If they do, SHUT IT DOWN. -->
		<match Class="PatchOperationRemove">
			<success>Always</success>
			<xpath>/Defs/ThingDef[defName="AP_Snakeoil"]/costList</xpath>
		</match>
		<!-- If the first XPATH does not exist, the original code stands. All according to plan. -->
	</Operation>
	
	<Operation Class="PatchOperationConditional">
	<!-- Does this exist? -->
	<xpath>/Defs/ThingDef[defName="AP_Snakeoil"]</xpath>
		<!-- If it does, add this. -->
		<match Class="PatchOperationAdd">
			<success>Always</success>
			<xpath>/Defs</xpath>
			<value>
				<RecipeDef>
					<defName>TSP_AP_TooTooTootsieGoodbye_Recipe</defName>
					<label>use life hack to synthesize DIY Snake Oil with one weird little trick</label>
					<description>With this miraculous, do-it-yourself recipe (INVENTED BY A MOM), use this one weird little trick to craft the finest elixer on the planet. It's Snake Oil, which is the cure to all your needs. \n It comes under many names, but all agree that it is the self-made, elixir version of a similar panacea: Jeremiah Peabody's Poly-Unsaturated, Extra-Strength, Long-Lasting, Green and Purple Pills.</description>    
					<jobString>mixing patent medicine</jobString>
					<workAmount>800</workAmount>
					<workSpeedStat>DrugCookingSpeed</workSpeedStat>
					<effectWorking>Cook</effectWorking>
					<soundWorking>Recipe_Drug</soundWorking>
					<allowMixingIngredients>true</allowMixingIngredients>
					<recipeUsers>
						<li>ManualGrinder</li>
						<li>ElectricGrinder</li>
						<li>DrugLab</li>
						<li>Brewery</li>
					</recipeUsers>
					<ingredients>
					  <li>
						<filter>
							<!-- First we add the toxin -->
							<categories>
								<li MayRequire="mlie.takisrandomstuff">MedicalHerbs</li>
							</categories>
							<thingDefs>
								<li>MedicineHerbal</li>
								<li>PsychiteLeaves</li>
								<li MayRequire="TSP.Isengriff.Storytime">ST_PoisonExtract</li>
								<li MayRequire="TSP.Isengriff.Storytime">ST_GoblinPoison</li>
								<li MayRequire="stoneanvil.smokeleaf.genetics.korundgen.kush">KorundgenKushBuds</li>
								<li MayRequire="syrchalis.harpy">RawHarpyChilis</li>
							</thingDefs>
							<disallowedThingDefs>
								<li MayRequire="TSP.Isengriff.Storytime">HerbaLeaves</li>
							</disallowedThingDefs>
						</filter>
						<count>10</count>
					  </li>
					  <li>
						<filter>
							<!-- Then we add the "spice" -->
							<thingDefs>
								<li>Chemfuel</li>
								<li MayRequire="TSP.Isengriff.Storytime">GuamLeaves</li>
								<li MayRequire="TSP.Isengriff.Storytime">ST_MixedHerbs</li>
								<li MayRequire="dajian.chiteaditional.expanded">LaJiao</li>
								<li MayRequire="vanillaexpanded.vcooke">VCE_RawSpices</li>
								<li MayRequire="herbs.plants">RawMint</li>
								<li MayRequire="syrchalis.harpy">RawHarpyChilis</li>
								
								<!-- Literally Chemful and booze mix -->
								<li MayRequire="sirmashedpotato.morrowrim.alcoholremade">MorrowRim_DagothBrandy_Brewed</li>
								<li MayRequire="sirmashedpotato.morrowrim.alcoholremade">MorrowRim_DagothBrandy</li>
								<li MayRequire="sirmashedpotato.morrowrim.alcoholremade">MorrowRim_DagothBrandyPrecursor</li>
							</thingDefs>
						</filter>
						<count>10</count>
					  </li>
					  <li>
						<filter>
							<!-- Lastly, we add the booze -->
							<thingDefs>
								<li>Hops</li>
								<li>Wort</li>
								<li>Beer</li>
								<li MayRequire="sirmashedpotato.morrowrim.alcoholremade">MorrowRim_RawComberry</li>
								<li MayRequire="TSP.Isengriff.Storytime">GnomeWort</li>
								<li MayRequire="TSP.Isengriff.Storytime">GnomeBeer</li>
								<li MayRequire="TSP.Isengriff.Storytime">TSP_ST_RumWort</li>
								<li MayRequire="TSP.Isengriff.Storytime">ST_KrakenRum</li>
								<li MayRequire="TSP.Isengriff.Storytime">ST_MikesLemonade</li>
								<li MayRequire="syrchalis.harpy">RawHarpyChilis</li>
								
								<!-- Literally Chemful and booze mix -->
								<li MayRequire="sirmashedpotato.morrowrim.alcoholremade">MorrowRim_DagothBrandy_Brewed</li>
								<li MayRequire="sirmashedpotato.morrowrim.alcoholremade">MorrowRim_DagothBrandy</li>
								<li MayRequire="sirmashedpotato.morrowrim.alcoholremade">MorrowRim_DagothBrandyPrecursor</li>
							</thingDefs>
						</filter>
						<count>5</count>
					  </li>
					</ingredients>
					<fixedIngredientFilter>
						<categories>
							<li MayRequire="mlie.takisrandomstuff">MedicalHerbs</li>
						</categories>
						<thingDefs>
							<li>MedicineHerbal</li>
							<li>Chemfuel</li>
							<li>Hops</li>
							<li>Wort</li>
							<li>Beer</li>
							<li MayRequire="sirmashedpotato.morrowrim.alcoholremade">MorrowRim_DagothBrandyPrecursor</li>
							<li MayRequire="sirmashedpotato.morrowrim.alcoholremade">MorrowRim_RawComberry</li>
							<li MayRequire="TSP.Isengriff.Storytime">ST_MikesLemonade</li>
							<li MayRequire="herbs.plants">RawMint</li>
							<li MayRequire="TSP.Isengriff.Storytime">GnomeWort</li>
							<li MayRequire="TSP.Isengriff.Storytime">GnomeBeer</li>
							<li MayRequire="TSP.Isengriff.Storytime">ST_PoisonExtract</li>
							<li MayRequire="TSP.Isengriff.Storytime">ST_GoblinPoison</li>
							<li MayRequire="TSP.Isengriff.Storytime">GuamLeaves</li>
							<li MayRequire="TSP.Isengriff.Storytime">ST_MixedHerbs</li>
							<li MayRequire="TSP.Isengriff.Storytime">TSP_ST_RumWort</li>
							<li MayRequire="stoneanvil.smokeleaf.genetics.korundgen.kush">KorundgenKushBuds</li>
							<li MayRequire="syrchalis.harpy">RawHarpyChilis</li>
							<li MayRequire="dajian.chiteaditional.expanded">LaJiao</li>
							<li MayRequire="vanillaexpanded.vcooke">VCE_RawSpices</li>
							
							<!-- Literally Chemful and booze mix -->
							<li MayRequire="sirmashedpotato.morrowrim.alcoholremade">MorrowRim_DagothBrandy_Brewed</li>
							<li MayRequire="sirmashedpotato.morrowrim.alcoholremade">MorrowRim_DagothBrandy</li>
							<li MayRequire="sirmashedpotato.morrowrim.alcoholremade">MorrowRim_DagothBrandyPrecursor</li>
						</thingDefs>
						<disallowedThingDefs>
							<li MayRequire="TSP.Isengriff.Storytime">HerbaLeaves</li>
						</disallowedThingDefs>
					</fixedIngredientFilter>
					<defaultIngredientFilter>
						<categories>
							<li MayRequire="mlie.takisrandomstuff">MedicalHerbs</li>
						</categories>
						<thingDefs>
							<li>Chemfuel</li>
							<li>Hops</li>
							<li MayRequire="herbs.plants">RawMint</li>
							<li MayRequire="TSP.Isengriff.Storytime">GuamLeaves</li>
							<li MayRequire="TSP.Isengriff.Storytime">ST_PoisonExtract</li>
							<li MayRequire="TSP.Isengriff.Storytime">ST_MikesLemonade</li>
							<li MayRequire="stoneanvil.smokeleaf.genetics.korundgen.kush">KorundgenKushBuds</li>
							<li MayRequire="syrchalis.harpy">RawHarpyChilis</li>
							
							<!-- Literally Chemful and booze mix -->
							<li MayRequire="sirmashedpotato.morrowrim.alcoholremade">MorrowRim_DagothBrandy_Brewed</li>
							<li MayRequire="sirmashedpotato.morrowrim.alcoholremade">MorrowRim_DagothBrandyPrecursor</li>
						</thingDefs>
					</defaultIngredientFilter>
					<products>
						<AP_Snakeoil>15</AP_Snakeoil>
					</products>
				</RecipeDef>
			</value>
		</match>
		<!-- If the first XPATH does not exist, the original code stands. -->
	</Operation>
	
	<Operation Class="PatchOperationConditional">
	<!-- Does this exist? -->
	<xpath>/Defs/ChemicalDef[defName="AP_Snakeoil_Chemical"]</xpath>
		<!-- If it does, do this replacement. -->
		<match Class="PatchOperationReplace">
			<success>Always</success>
			<xpath>/Defs/ChemicalDef[defName="AP_Snakeoil_Chemical"]/addictionHediff</xpath>
			<value>
				<addictionHediff>TSP_AP_ST_TooTooTootsieGoodbye_Addiction</addictionHediff>
			</value>
		</match>
		<!-- If the first XPATH does not exist, the original code stands. -->
	</Operation>
	
	<Operation Class="PatchOperationConditional">
	<!-- Does this exist? -->
	<xpath>/Defs/ChemicalDef[defName="AP_Snakeoil_Chemical"]</xpath>
		<!-- If it does, add this. -->
		<match Class="PatchOperationAdd">
			<success>Always</success>
			<xpath>/Defs/ChemicalDef[defName="AP_Snakeoil_Chemical"]</xpath>
			<value>
				<toleranceHediff>TSP_AP_ST_TooTooTootsieGoodbye_Tolerance</toleranceHediff>
			</value>
		</match>
		<!-- If the first XPATH does not exist, the original code stands. -->
	</Operation>
	
	<Operation Class="PatchOperationConditional">
	<!-- Does this exist? -->
	<xpath>/Defs/ChemicalDef[defName="AP_Snakeoil_Chemical"]</xpath>
		<!-- If it does, add this. -->
		<match Class="PatchOperationAdd">
			<success>Always</success>
			<xpath>/Defs</xpath>
			<value>
				<HediffDef ParentName="AddictionBase">
					<defName>TSP_AP_ST_TooTooTootsieGoodbye_Addiction</defName>
					<label>hypochondria</label>
					<description>TOOT TOOT, TOOTSIE, GOODBYE!! \n TOOT TOOT, TOOTSIE, DON'T CRY!! \n THAT LITTLE CHOO-CHOO TRAIN \n THAT TAKES ME AWAY FROM YOU... \n \n \n They say that drinking Snake Oil cures everything, but all that's known is that it gets trad-wives high and makes them bang on pianoes. \n \n Wholly convinced that Snake Oil is a miracle cure, this Pawn has developed hypochondria. Hypochondria is a medical delusion in which the victims constantly believes they are sick, infected, or injured, despite being entirely healthy. They will take medicine they do not need, at potential dangers to their actual health. \n For this Pawn, only another dose of Snake Oil will calm him, as he has fallen for its claim that it cures all disease. Prolonged abstention from taking the "panacea" will cause the Pawn to believe that he is sick and in need of "treatment", being inconsoloable until the cure is administered. \n \n However, extended denial of the elixir will eventually provide him with enough proof that he's perfectly alright, resolving the delusion.</description>
					<hediffClass>Hediff_Addiction</hediffClass>
					<causesNeed>TSP_AP_ST_TootsieGoodbye_Need</causesNeed>
					<scenarioCanAdd>false</scenarioCanAdd>
					<comps>
					  <li Class="HediffCompProperties_SeverityPerDay">
						<severityPerDay>-0.1</severityPerDay>
						<showDaysToRecover>true</showDaysToRecover>
					  </li>
					</comps>
					<stages>
						<li>
						</li>
						<li>
							<!-- Doesn't actually do anything, it's just in their head... -->
							<label>hypochondria</label>
							<!-- <restFallFactorOffset>0.5</restFallFactorOffset> -->
						</li>
					</stages>
				</HediffDef>
				
				<ThoughtDef>
					<defName>TSP_Goodbye_Tootsie_Too_Too</defName>
					<workerClass>ThoughtWorker_Hediff</workerClass>
					<hediff>TSP_AP_ST_TooTooTootsieGoodbye_Addiction</hediff>
					<validWhileDespawned>true</validWhileDespawned>
					<stages>
						<li>
							<visible>false</visible>
						</li>
						<li>
							<label>panacea hypochondria</label>
							<description>I've fallen ill AGAIN! What's wrong with me? Without the elixir, without that beautiful elixir, the song in my heart is- * COUGH COUGH COUGH * -ohh, I am aching all over...</description>
							<baseMoodEffect>-50</baseMoodEffect>
						</li>
					</stages>
				</ThoughtDef>
				
				<HediffDef ParentName="DrugToleranceBase">
					<defName>TSP_AP_ST_TooTooTootsieGoodbye_Tolerance</defName>
					<label>HIDDEN (SNAKE OIL)</label>
					<description>YOU SHOULD NOT BE SEEING THIS. REPORT THIS TO THE AUTHOR OF MOD IF YOU SEE IT.</description>
					<defaultLabelColor>227, 150, 62</defaultLabelColor>
					<scenarioCanAdd>false</scenarioCanAdd>
					<initialSeverity>0</initialSeverity>
					<hediffClass>HediffWithComps</hediffClass>
					<comps>
					  <li Class="HediffCompProperties_SeverityPerDay">
						<severityPerDay>-999</severityPerDay>
						<showDaysToRecover>false</showDaysToRecover>
					  </li>
					  <li Class="HediffCompProperties_DrugEffectFactor">
						<chemical>AP_Snakeoil_Chemical</chemical>
					  </li>
					</comps>
					<stages Inherit="False">
						<li>
							<becomeVisible>false</becomeVisible>
							<!-- <minSeverity>0</minSeverity> -->
						</li>
					</stages>
				</HediffDef>
				
				<NeedDef ParentName="DrugAddictionNeedBase">
					<defName>TSP_AP_ST_TootsieGoodbye_Need</defName>
					<needClass>Need_Chemical</needClass>
					<label>hypochondria</label>
					<description>This Pawn is a hypochondriac. Hypochondria is a medical delusion in which the victims constantly believes they are sick, infected, or injured, despite being entirely healthy. They will take medicine they do not need, at potential dangers to their actual health. \n For this Pawn, only another dose of Snake Oil will calm him, as he has fallen for its claim that it cures all disease. However, extended denial of the elixir will eventually provide him with enough proof that he's perfectly alright, resolving the delusion.</description>
					<listPriority>50</listPriority>
				</NeedDef>
			</value>
		</match>
		<!-- If the first XPATH does not exist, the original code stands. -->
	</Operation>
	
	<Operation Class="PatchOperationConditional">
	<!-- Does this exist? -->
	<xpath>/Defs/ThingDef[defName="AP_Snakeoil"]</xpath>
		<!-- If it does, do this replacement. -->
		<match Class="PatchOperationReplace">
			<success>Always</success>
			<xpath>/Defs/ThingDef[defName="AP_Snakeoil"]/comps</xpath>
			<value>
				<comps>
					<li Class="CompProperties_Drug">
						<chemical>AP_Snakeoil_Chemical</chemical>
						<addictiveness>0.33</addictiveness>
						<minToleranceToAddict>0</minToleranceToAddict>
						<existingAddictionSeverityOffset>1</existingAddictionSeverityOffset>
						<isCombatEnhancingDrug>true</isCombatEnhancingDrug>
						<needLevelOffset>1</needLevelOffset>
						<listOrder>30</listOrder>
						<overdoseSeverityOffset>0.01~0.015</overdoseSeverityOffset>
						<largeOverdoseChance>0.001</largeOverdoseChance>
					</li>
				</comps>
			</value>
		</match>
		<!-- If the first XPATH does not exist, the original code stands. -->
	</Operation>
	
	<Operation Class="PatchOperationConditional">
	<!-- Does this exist? -->
	<xpath>/Defs/ThingDef[defName="AP_Snakeoil"]</xpath>
		<!-- If it does, do this replacement. -->
		<match Class="PatchOperationReplace">
			<success>Always</success>
			<xpath>/Defs/ThingDef[defName="AP_Snakeoil"]/ingestible/foodType</xpath>
			<value>
				<foodType>Fluid, Processed, Liquor</foodType>
			</value>
		</match>
		<!-- If the first XPATH does not exist, the original code stands. -->
	</Operation>
	
	<Operation Class="PatchOperationConditional">
	<!-- Does this exist? -->
	<xpath>/Defs/ThingDef[defName="AP_Snakeoil"]</xpath>
		<!-- If it does, do this replacement. -->
		<match Class="PatchOperationReplace">
			<success>Always</success>
			<xpath>/Defs/ThingDef[defName="AP_Snakeoil"]/ingestible/ingestSound</xpath>
			<value>
				<ingestSound>Ingest_Beer</ingestSound>
			</value>
		</match>
		<!-- If the first XPATH does not exist, the original code stands. -->
	</Operation>
	
	<Operation Class="PatchOperationConditional">
	<!-- Does this exist? -->
	<xpath>/Defs/ThingDef[defName="AP_Snakeoil"]</xpath>
		<!-- If it does, do this replacement. -->
		<match Class="PatchOperationReplace">
			<success>Always</success>
			<xpath>/Defs/ThingDef[defName="AP_Snakeoil"]/ingestible/drugCategory</xpath>
			<value>
				<drugCategory>Medical</drugCategory>
			</value>
		</match>
		<!-- If the first XPATH does not exist, the original code stands. -->
	</Operation>
	
	<Operation Class="PatchOperationConditional">
	<!-- Does this exist? -->
	<xpath>/Defs/HediffDef[defName="AP_Snakeoil_Hediff"]</xpath>
		<!-- If it does, add this. -->
		<match Class="PatchOperationAdd">
			<success>Always</success>
			<xpath>/Defs/Hediff[defName="AP_Snakeoil_Hediff"]/stages/li</xpath>
			<value>
				<makeImmuneTo>
					<li>WoundInfection</li>
					
					<!-- Mod support -->
					<!-- Placebo effect: the victim BELIEVES they are invincible, and so magic does not effect their willpower -->
					<li MayRequire="baskerville.hellsingarmsultimate">HSAU_GhoulPrecursor_PP</li>
					<li MayRequire="baskerville.hellsingarmsultimate">HSAU_GhoulPrecursor_OO</li>
					<li MayRequire="baskerville.hellsingarmsultimate">HSAU_GhoulPrecursor_GG</li>
					<li MayRequire="baskerville.hellsingarmsultimate">HSAU_MeowsfurtunateMetamorfursis</li>
				</makeImmuneTo>
			</value>
		</match>
		<!-- If the first XPATH does not exist, the original code stands. -->
	</Operation>
	
	<Operation Class="PatchOperationConditional">
	<!-- Does this exist? -->
	<xpath>/Defs/ThingDef[defName="AP_Snakeoil"]</xpath>
		<!-- If it does, add this. -->
		<match Class="PatchOperationAdd">
			<success>Always</success>
			<xpath>/Defs/ThingDef[defName="AP_Snakeoil"]/ingestible/outcomeDoers</xpath>
			<value>
				<li Class="IngestionOutcomeDoer_GiveHediff">
					<hediffDef>TSP_AP_ST_TooTooTootsieGoodbye_Tolerance</hediffDef>
					<severity>0.001</severity>
					<divideByBodySize>false</divideByBodySize>
				</li>
			</value>
		</match>
		<!-- If the first XPATH does not exist, the original code stands. -->
	</Operation>
	
	
</Patch>