<?xml version="1.0" encoding="utf-8" ?>
<Defs>

	<ThinkTreeDef>
		<defName>AvP_Xenomorph</defName>
		<thinkRoot Class="ThinkNode_Priority">
      <subNodes>
		<!-- Has no lord, Brood -->
		<li Class="ThinkNode_ConditionalHasLord">
		  <invert>true</invert>
		  <subNodes>
			<!-- 
			 <li Class="JobGiver_Xenomorph_Kidnap" /> 
			 -->
		  </subNodes>
		</li>
        <!-- Keep lying down if we have to -->
				<li Class="ThinkNode_ConditionalMustKeepLyingDown">
					<subNodes>
            <!-- Do a queued job if possible -->
            <li Class="ThinkNode_QueuedJob">
              <inBedOnly>true</inBedOnly>
            </li>

            <!-- Keep lying down -->
            <li Class="JobGiver_KeepLyingDown" />
          </subNodes>
        </li>
        
        <li Class="ThinkNode_Subtree">
          <treeDef>Downed</treeDef>
        </li>
        <li Class="ThinkNode_Subtree">
          <treeDef>BurningResponse</treeDef>
        </li>
        <li Class="ThinkNode_Subtree">
          <treeDef>MentalStateCritical</treeDef>
        </li>
        
        <!-- Conditional Not Fully Grown -->
        <li Class="ThinkNode_ConditionalNotGrown">
          <subNodes>
			<li Class="JobGiver_Xenomorph_GetFood" />
			<li Class="JobGiver_Xenomorph_GetFood"> 
			  <forceScanWholeMap>false</forceScanWholeMap>
			</li>
			<li Class="JobGiver_Xenomorph_WanderHive">
				<maxDanger>Deadly</maxDanger>
			</li>
          </subNodes>
        </li>
		
        <!-- React to close melee threat -->
		<li Class="JobGiver_ReactToCloseMeleeThreat" />

        <!-- Do a queued job -->
        <li Class="ThinkNode_QueuedJob" />
	
		<!-- Self-tend if you're an NPC -->
		<li Class="ThinkNode_ConditionalNPCCanSelfTendNow">
		  <subNodes>
			<li Class="JobGiver_Xenomorph_SelfTend" />
		  </subNodes>
		</li>
		
        <!-- Wild animals dig out if no path to map edge and starving -->
        <li Class="ThinkNode_ConditionalHasFaction">
          <invert>true</invert>
          <subNodes>
            <li Class="ThinkNode_ConditionalStarving">
              <subNodes>
                <li Class="ThinkNode_ConditionalBodySize">
                  <min>0.7</min>
                  <subNodes>
                    <li Class="ThinkNode_Subtree">
                      <treeDef>DigOutIfCannotReachMapEdge</treeDef>
                    </li>
                  </subNodes>
                </li>
              </subNodes>
            </li>
          </subNodes>
        </li>
        
        <!-- Leave if timed out -->
        <li Class="ThinkNode_ConditionalExitTimedOut">
          <subNodes>
            <li Class="ThinkNode_Tagger">
              <tagToGive>Misc</tagToGive>
              <subNodes>
                <li Class="JobGiver_ExitMapRandom">
                  <defaultLocomotion>Walk</defaultLocomotion>     
                </li>
              </subNodes>
            </li>
          </subNodes>
        </li>

        <!-- Mental state non critical -->
        <li Class="ThinkNode_Subtree">
          <treeDef>MentalStateNonCritical</treeDef>
        </li>

        <!-- Forced goto -->
        <li Class="ThinkNode_ConditionalForcedGoto">
          <subNodes>
            <li Class="ThinkNode_Tagger">
              <tagToGive>Misc</tagToGive>
              <subNodes>
                <li Class="JobGiver_ForcedGoto" />
              </subNodes>
            </li>
          </subNodes>
        </li>
        
		<!-- Face Hugger Hunting -->
		<li Class="ThinkNode_ConditionalPawnKind">
		  <pawnKind>AvP_Xenomorph_FaceHugger</pawnKind>
		  <subNodes>
			<li Class="ThinkNode_Tagger">
			  <tagToGive>Idle</tagToGive>
			  <subNodes>
				<!-- Hunt -->
				<li Class="ThinkNode_ConditionalFacehuggerFertile">
				  <subNodes>
					<li Class="JobGiver_Xenomorph_FacehuggerHunt" />
				  </subNodes>
				</li>
				<!-- Exit -->
				<li Class="JobGiver_Xenomorph_GetFood" />
				<!-- Wander -->
				<li Class="JobGiver_WanderAnywhere">
				  <maxDanger>Deadly</maxDanger>
				  <ticksBetweenWandersRange>
					<min>120</min>
					<max>240</max>
				  </ticksBetweenWandersRange>
				</li>
			  </subNodes>
			</li>
		  </subNodes>
		</li>
		
		<!-- Royal Hugger Hunting -->
		<li Class="ThinkNode_ConditionalPawnKind">
		  <pawnKind>AvP_Xenomorph_RoyaleHugger</pawnKind>
		  <subNodes>
			<li Class="ThinkNode_Tagger">
			  <tagToGive>Idle</tagToGive>
			  <subNodes>
				<!-- Hunt -->
				<li Class="ThinkNode_ConditionalFacehuggerFertile">
				  <subNodes>
					<li Class="JobGiver_Xenomorph_FacehuggerHunt" />
				  </subNodes>
				</li>
				<!-- Exit -->
				<li Class="JobGiver_Xenomorph_GetFood" />
				<!-- Wander -->
				<li Class="JobGiver_WanderAnywhere">
				  <maxDanger>Deadly</maxDanger>
				  <ticksBetweenWandersRange>
					<min>120</min>
					<max>240</max>
				  </ticksBetweenWandersRange>
				</li>
			  </subNodes>
			</li>
		  </subNodes>
		</li>
		
        <!-- Conditional Fully Grown -->
        <li Class="ThinkNode_ConditionalFullyGrown">
          <subNodes>
				
			<!-- Drone Gather Infectable Hunting -->
			<li Class="ThinkNode_ConditionalPawnKind">
			  <pawnKind>AvP_Xenomorph_Drone</pawnKind>
			  <subNodes>
					<li Class="ThinkNode_ConditionalAnyDownedInfectableSpawnedNearby">
					  <subNodes>
						<li Class="JobGiver_Xenomorph_Kidnap" />
					  </subNodes>
					</li>
			  </subNodes>
			</li>
          </subNodes>
        </li>
		
		<!-- Lord directives -->
        <li Class="ThinkNode_Subtree">
          <treeDef>LordDuty</treeDef>
        </li>
        
	
        <!-- Insertion hook for modders -->
        <li Class="ThinkNode_SubtreesByTag">
          <insertTag>Xenomorph_PreMain</insertTag>
        </li>

        <!-- Wild animals leave map in some conditions -->
        <li Class="ThinkNode_ConditionalHasFaction">
          <invert>true</invert>
          <subNodes>
            <li Class="ThinkNode_Subtree">
              <treeDef>LeaveIfWrongSeason</treeDef>
            </li>
            <li Class="ThinkNode_Subtree">
              <treeDef>LeaveIfStarving</treeDef>
            </li>

            <!-- Wild animals randomly leave map -->
            <li Class="ThinkNode_ChancePerHour_Constant">
              <mtbDays>60</mtbDays>
              <subNodes>
                <li Class="ThinkNode_Tagger">
                  <tagToGive>Misc</tagToGive>
                  <subNodes>
                    <li Class="JobGiver_ExitMapRandom">
                      <defaultLocomotion>Walk</defaultLocomotion>
                    </li>
                  </subNodes>
                </li>
              </subNodes>
            </li>
          </subNodes>
        </li>

        <!-- Lay eggs you need to -->
        <li Class="JobGiver_Xenomorph_LayEgg" />

        <!-- Tame animal -->
        <li Class="ThinkNode_ConditionalOfPlayerFaction">
          <subNodes>
            <li Class="ThinkNode_Tagger">
              <tagToGive>TrainedAnimalBehavior</tagToGive>
              <subNodes>
                <!-- Trained behavior: obedience: Follow and defend master -->
                <li Class="ThinkNode_ConditionalTrainableCompleted">
                  <trainable>Obedience</trainable>
                  <subNodes>
                    <li Class="ThinkNode_ConditionalShouldFollowMaster" >
                      <subNodes>
                        <li Class="JobGiver_AIDefendMaster">
                          <attackMeleeThreatEvenIfNotHostile>true</attackMeleeThreatEvenIfNotHostile>
                        </li>
                        <li Class="JobGiver_AIFollowMaster"/>
                        <li Class="JobGiver_WanderNearMaster" />
                      </subNodes>
                    </li>
                  </subNodes>
                </li>

                <!-- Trained behavior: Rescue-->
                <li Class="ThinkNode_ConditionalTrainableCompleted">
                  <trainable>Rescue</trainable>
                  <subNodes>
                    <li Class="JobGiver_RescueNearby">
                      <radius>30</radius>
                    </li>
                  </subNodes>
                </li>
              </subNodes>
            </li>

            <!-- Take care of critical needs (below rescue - so heroic!)-->
            
            <li Class="ThinkNode_Tagger">
              <tagToGive>RestingForMedicalReasons</tagToGive>
              <subNodes>
                <li Class="JobGiver_PatientGoToBed" />
              </subNodes>
            </li>
            
            <li Class="JobGiver_SeekAllowedArea" />
            <li Class="JobGiver_SeekSafeTemperature" />
            
          </subNodes>
        </li>
        
				<!-- Eat random things out of curiosity -->
				<li Class="ThinkNode_ChancePerHour_Constant">
					<mtbDays>60</mtbDays>
					<subNodes>
            <li Class="ThinkNode_Tagger">
              <tagToGive>SatisfyingNeeds</tagToGive>
              <subNodes>
                <li Class="JobGiver_EatRandom"/>
              </subNodes>
            </li>
					</subNodes>
				</li>
				
        <!-- Satisfy basic needs -->
        <li Class="ThinkNode_Subtree">
          <treeDef>SatisfyBasicNeeds</treeDef>
        </li>

        <!-- Tame animal: do useful things for the colony-->
        <li Class="ThinkNode_ConditionalHasFaction">
          <subNodes>
            
            <!-- Try to mate -->
            <li Class="ThinkNode_ChancePerHour_Mate">
              <subNodes>
                <li Class="ThinkNode_Tagger">
                  <tagToGive>SatisfyingNeeds</tagToGive>
                  <subNodes>
                    <li Class="JobGiver_Mate" />
                  </subNodes>
                </li>
              </subNodes>
            </li>

            <!-- Nuzzle randoms -->
            <li Class="ThinkNode_ChancePerHour_Nuzzle">
              <subNodes>
                <li Class="ThinkNode_Tagger">
                  <tagToGive>Misc</tagToGive>
                  <subNodes>
                    <li Class="JobGiver_Nuzzle" />
                  </subNodes>
                </li>
              </subNodes>
            </li>

            <!-- Trained behavior: Haul-->
            <li Class="ThinkNode_ChancePerHour_Constant">
              <mtbHours>1.5</mtbHours>
              <subNodes>
                <li Class="ThinkNode_ConditionalTrainableCompleted">
                  <trainable>Haul</trainable>
                  <subNodes>
                    <li Class="ThinkNode_Tagger">
                      <tagToGive>TrainedAnimalBehavior</tagToGive>
                      <subNodes>
                        <li Class="JobGiver_Haul" />
                      </subNodes>
                    </li>
                  </subNodes>
                </li>
              </subNodes>
            </li>
          </subNodes>
        </li>

        <!-- Insertion hook for modders -->
        <li Class="ThinkNode_SubtreesByTag">
          <insertTag>Xenomorph_PreWander</insertTag>
        </li>
        
        <!-- Tame animal: wander near colony if possible -->
        <li Class="ThinkNode_ConditionalOfPlayerFaction">
          <subNodes>
            <li Class="ThinkNode_Tagger">
              <tagToGive>Idle</tagToGive>
              <subNodes>
                <!-- Wander near your current position if in hostile map -->
                <li Class="ThinkNode_ConditionalAnyEnemyInHostileMap">
                  <subNodes>
                    <li Class="JobGiver_WanderAnywhere">
                      <maxDanger>None</maxDanger>
                      <ticksBetweenWandersRange>
                        <min>120</min>
                        <max>240</max>
                      </ticksBetweenWandersRange>
                    </li>
                  </subNodes>
                </li>

                <!-- Wander near colony -->
                <li Class="JobGiver_WanderColony">
                  <maxDanger>None</maxDanger>
                  <ticksBetweenWandersRange>
                    <min>120</min>
                    <max>240</max>
                  </ticksBetweenWandersRange>
                </li>
              </subNodes>
            </li>
          </subNodes>
        </li>
        
        <!-- Of neutral faction: rest and then exit the map -->
        <li Class="ThinkNode_ConditionalNonPlayerNonHostileFaction">
          <subNodes>
            <li Class="ThinkNode_Tagger">
              <tagToGive>RestingForMedicalReasons</tagToGive>
              <subNodes>
                <li Class="JobGiver_PatientGoToBed" />
              </subNodes>
            </li>
            
            <li Class="ThinkNode_Tagger">
              <tagToGive>Misc</tagToGive>
              <subNodes>
                <li Class="JobGiver_ExitMapBest">
                  <defaultLocomotion>Walk</defaultLocomotion>
                </li>
              </subNodes>
            </li>
          </subNodes>
        </li>
        
        <!-- Wander -->
        <li Class="ThinkNode_Tagger">
          <tagToGive>Idle</tagToGive>
          <subNodes>
            <li Class="ThinkNode_ConditionalHerdAnimal">
              <subNodes>
                <li Class="JobGiver_WanderHerd">
                  <maxDanger>Deadly</maxDanger>
                  <ticksBetweenWandersRange>
                    <min>120</min>
                    <max>240</max>
                  </ticksBetweenWandersRange>
                </li>
              </subNodes>
            </li>
            
            <li Class="JobGiver_WanderAnywhere">
              <maxDanger>Deadly</maxDanger>
              <ticksBetweenWandersRange>
                <min>120</min>
                <max>240</max>
              </ticksBetweenWandersRange>    
            </li>
          </subNodes>
        </li>

        <li Class="JobGiver_IdleError"/>
      </subNodes>
		</thinkRoot>
	</ThinkTreeDef>

  <!--============= Dig out if I can't reach map edge ===========-->
  
  <ThinkTreeDef>
    <defName>AvP_Xenomorph_DigOutIfCannotReachMapEdge</defName>
    <thinkRoot Class="ThinkNode_ConditionalCannotReachMapEdge">
      <subNodes>
        <li Class="ThinkNode_Tagger">
          <tagToGive>Misc</tagToGive>
          <subNodes>
            <li Class="JobGiver_ExitMapBest">
              <defaultLocomotion>Walk</defaultLocomotion>
              <forceCanDig>true</forceCanDig>
              <canBash>true</canBash>
            </li>
          </subNodes>
        </li>
      </subNodes>
    </thinkRoot>
  </ThinkTreeDef>
  
</Defs>
