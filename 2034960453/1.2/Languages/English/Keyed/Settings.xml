<?xml version='1.0' encoding='UTF-8'?>
<LanguageData>
  <CodeOptimist.JobsOfOpportunity_SettingTitle_haulBeforeBill><![CDATA[Optimize hauling ingredients]]></CodeOptimist.JobsOfOpportunity_SettingTitle_haulBeforeBill>
  <CodeOptimist.JobsOfOpportunity_SettingDesc_haulBeforeBill><![CDATA[If hauling ingredients to storage would bring them closer to their workbench, do that first (grabbing extra).

Unticks similar setting in <color=grey><b>Common Sense</b></color> mod.]]></CodeOptimist.JobsOfOpportunity_SettingDesc_haulBeforeBill>
  <CodeOptimist.JobsOfOpportunity_SettingTitle_haulBeforeSupply><![CDATA[Optimize hauling supplies]]></CodeOptimist.JobsOfOpportunity_SettingTitle_haulBeforeSupply>
  <CodeOptimist.JobsOfOpportunity_SettingDesc_haulBeforeSupply><![CDATA[If hauling supplies to storage would bring them closer to their blueprint, do that first (grabbing extra).]]></CodeOptimist.JobsOfOpportunity_SettingDesc_haulBeforeSupply>
  <CodeOptimist.JobsOfOpportunity_SettingTitle_skipIfBleeding><![CDATA[Skip when bleeding]]></CodeOptimist.JobsOfOpportunity_SettingTitle_skipIfBleeding>
  <CodeOptimist.JobsOfOpportunity_SettingDesc_skipIfBleeding><![CDATA[Don't take jobs of opportunity when bleeding.
"Optimize hauling" features still apply since they (hopefully) expedite a job.]]></CodeOptimist.JobsOfOpportunity_SettingDesc_skipIfBleeding>
  <CodeOptimist.JobsOfOpportunity_SettingTitle_enabled><![CDATA[Enabled]]></CodeOptimist.JobsOfOpportunity_SettingTitle_enabled>
  <CodeOptimist.JobsOfOpportunity_SettingDesc_enabled><![CDATA[Toggle mod without restarting.

Off is equivalent to disabling all features, resetting each vanilla parameter, and "initial closeness" set to "(vanilla)".]]></CodeOptimist.JobsOfOpportunity_SettingDesc_enabled>
  <CodeOptimist.JobsOfOpportunity_SettingTitle_haulToInventory><![CDATA[Haul to inventory (PUAH mod)]]></CodeOptimist.JobsOfOpportunity_SettingTitle_haulToInventory>
  <CodeOptimist.JobsOfOpportunity_SettingDesc_haulToInventory><![CDATA[Custom use of <color=grey><b>Pick Up And Haul</b></color>! (Optional mod. Installed separately.)

PUAH is carefully controlled so only items qualifying as opportunistic will be gathered.
(Dedicated haul jobs behave as normal, gathering as much as they can.)]]></CodeOptimist.JobsOfOpportunity_SettingDesc_haulToInventory>
  <CodeOptimist.JobsOfOpportunity_SettingTitle_haulProximities><![CDATA[Haulable & storage initial closeness]]></CodeOptimist.JobsOfOpportunity_SettingTitle_haulProximities>
  <CodeOptimist.JobsOfOpportunity_SettingDesc_haulProximities><![CDATA[For performance reasons vanilla doesn't calculate and sort all haul paths to find opportunities, instead it settles for the first found with a haulable near our starting position, and its storage near our job destination. I've made these parameters configurable (marked with ¹).

Since other parameters do well in limiting travel distance (marked with ²) we can change this from a requirement to simply a preference for closer hauls.

If performance is an issue, set this stricter to reduce available hauls.
If straight-line distance poorly represents your actual haul paths, set this stricter and adjust "max region look count"¹.]]></CodeOptimist.JobsOfOpportunity_SettingDesc_haulProximities>
  <CodeOptimist.JobsOfOpportunity_SettingTitle_haulProximities_Both><![CDATA[Both required (vanilla)]]></CodeOptimist.JobsOfOpportunity_SettingTitle_haulProximities_Both>
  <CodeOptimist.JobsOfOpportunity_SettingDesc_haulProximities_Both><![CDATA[]]></CodeOptimist.JobsOfOpportunity_SettingDesc_haulProximities_Both>
  <CodeOptimist.JobsOfOpportunity_SettingTitle_haulProximities_Either><![CDATA[Either required]]></CodeOptimist.JobsOfOpportunity_SettingTitle_haulProximities_Either>
  <CodeOptimist.JobsOfOpportunity_SettingDesc_haulProximities_Either><![CDATA[]]></CodeOptimist.JobsOfOpportunity_SettingDesc_haulProximities_Either>
  <CodeOptimist.JobsOfOpportunity_SettingTitle_haulProximities_Ignored><![CDATA[Preferred (recommended)]]></CodeOptimist.JobsOfOpportunity_SettingTitle_haulProximities_Ignored>
  <CodeOptimist.JobsOfOpportunity_SettingDesc_haulProximities_Ignored><![CDATA[]]></CodeOptimist.JobsOfOpportunity_SettingDesc_haulProximities_Ignored>
  <CodeOptimist.JobsOfOpportunity_SettingTitle_drawOpportunisticJobs><![CDATA[Draw opportunistic jobs]]></CodeOptimist.JobsOfOpportunity_SettingTitle_drawOpportunisticJobs>
  <CodeOptimist.JobsOfOpportunity_SettingDesc_drawOpportunisticJobs><![CDATA[Paths are colored red, green, blue.
start →ᴿ haulable →ᴳ storage →ᴮ job

(This is sync'd to vanilla's <i>Development mode → inspector icon → Visibility → Draw Opportunistic Jobs, which is why it doesn't persist through restarts.)</i>]]></CodeOptimist.JobsOfOpportunity_SettingDesc_drawOpportunisticJobs>
  <CodeOptimist.JobsOfOpportunity_SettingTitle_showVanillaParameters><![CDATA[Show opportunity parameters…]]></CodeOptimist.JobsOfOpportunity_SettingTitle_showVanillaParameters>
  <CodeOptimist.JobsOfOpportunity_SettingDesc_showVanillaParameters><![CDATA[These settings are provided for explaining and tweaking vanilla's built-in opportunistic hauling.

A value of 0 will skip a check.]]></CodeOptimist.JobsOfOpportunity_SettingDesc_showVanillaParameters>
  <CodeOptimist.JobsOfOpportunity_SettingTitle_maxNewLegsPctOrigTrip><![CDATA[²Max new legs % of original trip]]></CodeOptimist.JobsOfOpportunity_SettingTitle_maxNewLegsPctOrigTrip>
  <CodeOptimist.JobsOfOpportunity_SettingDesc_maxNewLegsPctOrigTrip><![CDATA[Max start-to-haulable + storage-to-job % of original trip.
This is straight-line distance ("as the crow flies").]]></CodeOptimist.JobsOfOpportunity_SettingDesc_maxNewLegsPctOrigTrip>
  <CodeOptimist.JobsOfOpportunity_SettingTitle_maxTotalTripPctOrigTrip><![CDATA[²Max total trip % of original trip]]></CodeOptimist.JobsOfOpportunity_SettingTitle_maxTotalTripPctOrigTrip>
  <CodeOptimist.JobsOfOpportunity_SettingDesc_maxTotalTripPctOrigTrip><![CDATA[This is straight-line distance ("as the crow flies").]]></CodeOptimist.JobsOfOpportunity_SettingDesc_maxTotalTripPctOrigTrip>
  <CodeOptimist.JobsOfOpportunity_SettingTitle_maxStartToThing><![CDATA[¹Max start-to-haulable]]></CodeOptimist.JobsOfOpportunity_SettingTitle_maxStartToThing>
  <CodeOptimist.JobsOfOpportunity_SettingDesc_maxStartToThing><![CDATA[This is straight-line distance ("as the crow flies").]]></CodeOptimist.JobsOfOpportunity_SettingDesc_maxStartToThing>
  <CodeOptimist.JobsOfOpportunity_SettingTitle_maxStartToThingPctOrigTrip><![CDATA[¹Max start-to-haulable % of original trip]]></CodeOptimist.JobsOfOpportunity_SettingTitle_maxStartToThingPctOrigTrip>
  <CodeOptimist.JobsOfOpportunity_SettingDesc_maxStartToThingPctOrigTrip><![CDATA[This is straight-line distance ("as the crow flies").]]></CodeOptimist.JobsOfOpportunity_SettingDesc_maxStartToThingPctOrigTrip>
  <CodeOptimist.JobsOfOpportunity_SettingTitle_maxStartToThingRegionLookCount><![CDATA[¹Max start-to-haulable region look count]]></CodeOptimist.JobsOfOpportunity_SettingTitle_maxStartToThingRegionLookCount>
  <CodeOptimist.JobsOfOpportunity_SettingDesc_maxStartToThingRegionLookCount><![CDATA[This parameter limits our actual pathing.
To understand it, enable <i>Development mode → inspector icon → Visibility → Draw Regions</i>.

Exploration begins from the start region spreading out to all neighbors until encountering the destination region. This setting caps the total number explored - even those in the wrong direction.

It can't be calculated perfectly from distance, as regions will vary in size and neighbors. (A corridor has only forward and back, so they're explored further.)
But in a completely open field, if a pawn must travel the distance of n=3 full-sized 12x12 regions (~36 tiles), the algorithm will explore 2(n^2+n)+1 or 25 regions.]]></CodeOptimist.JobsOfOpportunity_SettingDesc_maxStartToThingRegionLookCount>
  <CodeOptimist.JobsOfOpportunity_SettingTitle_maxStoreToJob><![CDATA[¹Max storage-to-job]]></CodeOptimist.JobsOfOpportunity_SettingTitle_maxStoreToJob>
  <CodeOptimist.JobsOfOpportunity_SettingDesc_maxStoreToJob><![CDATA[This is straight-line distance ("as the crow flies").]]></CodeOptimist.JobsOfOpportunity_SettingDesc_maxStoreToJob>
  <CodeOptimist.JobsOfOpportunity_SettingTitle_maxStoreToJobPctOrigTrip><![CDATA[¹Max storage-to-job % of original trip]]></CodeOptimist.JobsOfOpportunity_SettingTitle_maxStoreToJobPctOrigTrip>
  <CodeOptimist.JobsOfOpportunity_SettingDesc_maxStoreToJobPctOrigTrip><![CDATA[This is straight-line distance ("as the crow flies").]]></CodeOptimist.JobsOfOpportunity_SettingDesc_maxStoreToJobPctOrigTrip>
  <CodeOptimist.JobsOfOpportunity_SettingTitle_maxStoreToJobRegionLookCount><![CDATA[¹Max storage-to-job region look count]]></CodeOptimist.JobsOfOpportunity_SettingTitle_maxStoreToJobRegionLookCount>
  <CodeOptimist.JobsOfOpportunity_SettingDesc_maxStoreToJobRegionLookCount><![CDATA[This parameter limits our actual pathing.
To understand it, enable <i>Development mode → inspector icon → Visibility → Draw Regions</i>.

Exploration begins from the start region spreading out to all neighbors until encountering the destination region. This setting caps the total number explored - even those in the wrong direction.

It can't be calculated perfectly from distance, as regions will vary in size and neighbors. (A corridor has only forward and back, so they're explored further.)
But in a completely open field, if a pawn must travel the distance of n=3 full-sized 12x12 regions (~36 tiles), the algorithm will explore 2(n^2+n)+1 or 25 regions.]]></CodeOptimist.JobsOfOpportunity_SettingDesc_maxStoreToJobRegionLookCount>
</LanguageData>
