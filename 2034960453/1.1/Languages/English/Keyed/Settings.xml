<?xml version='1.0' encoding='UTF-8'?>

<LanguageData>
  <CodeOptimist.JobsOfOpportunity_SettingTitle_haulToInventory><![CDATA[Haul to inventory support]]></CodeOptimist.JobsOfOpportunity_SettingTitle_haulToInventory>
  <CodeOptimist.JobsOfOpportunity_SettingDesc_haulToInventory><![CDATA[Advanced support for <color=grey><b><i>Mehni's</i> Pick Up And Haul</b></color>!

Only items qualifying as opportunistic will be hauled; solves issue with spread-out stockpiles and <color=grey><b>unloading madness</b></color>.
(Dedicated haul jobs behave as normal, gathering as much as they can.)]]></CodeOptimist.JobsOfOpportunity_SettingDesc_haulToInventory>
  <CodeOptimist.JobsOfOpportunity_SettingTitle_skipIfBleeding><![CDATA[Skip when bleeding]]></CodeOptimist.JobsOfOpportunity_SettingTitle_skipIfBleeding>
  <CodeOptimist.JobsOfOpportunity_SettingDesc_skipIfBleeding><![CDATA[Don't take jobs of opportunity when bleeding.]]></CodeOptimist.JobsOfOpportunity_SettingDesc_skipIfBleeding>
  <CodeOptimist.JobsOfOpportunity_SettingTitle_haulProximities><![CDATA[Haulable & storage initial-proximity]]></CodeOptimist.JobsOfOpportunity_SettingTitle_haulProximities>
  <CodeOptimist.JobsOfOpportunity_SettingDesc_haulProximities><![CDATA[For performance reasons vanilla doesn't calculate and sort all haul paths, instead it settles for the first found with a haulable and its (storage) destination in range of our original start and original (job) destination, respectively.

It pays no attention to how close our pawn may pass in the middle of their trip: it checks only the beginning and end.

With this setting we can loosen these requirements in stages to find more hauls while preferring the best.

Although coded as optimally as possible, a second or third look through potential hauls does cost performance, but it's still faster than sorting.

Because other² parameters limit travel distance, a setting of "Ignored" will still give rational hauls (and more than "Both" or "Either") without reducing performance, but a pawn may choose a longer haul over a shorter one, since they are unordered.]]></CodeOptimist.JobsOfOpportunity_SettingDesc_haulProximities>
  <CodeOptimist.JobsOfOpportunity_SettingTitle_haulBeforeSupply><![CDATA[Optimize hauling to construction]]></CodeOptimist.JobsOfOpportunity_SettingTitle_haulBeforeSupply>
  <CodeOptimist.JobsOfOpportunity_SettingDesc_haulBeforeSupply><![CDATA[If <i>and only if</i> hauling a resource to storage would bring it closer to a blueprint, do that first.
Haul jobs carry more materials, and with <i>Pick Up And Haul</i>, many more.

]]></CodeOptimist.JobsOfOpportunity_SettingDesc_haulBeforeSupply>
  <CodeOptimist.JobsOfOpportunity_SettingTitle_drawOpportunisticJobs><![CDATA[Draw opportunistic jobs]]></CodeOptimist.JobsOfOpportunity_SettingTitle_drawOpportunisticJobs>
  <CodeOptimist.JobsOfOpportunity_SettingDesc_drawOpportunisticJobs><![CDATA[Paths are colored red, green, blue.
start →ᴿ haulable →ᴳ storage →ᴮ job

(This is vanilla's <i>Development mode → inspector icon → Visibility → Draw Opportunistic Jobs)</i>]]></CodeOptimist.JobsOfOpportunity_SettingDesc_drawOpportunisticJobs>
  <CodeOptimist.JobsOfOpportunity_SettingTitle_haulProximities_Ignored><![CDATA[Ignored]]></CodeOptimist.JobsOfOpportunity_SettingTitle_haulProximities_Ignored>
  <CodeOptimist.JobsOfOpportunity_SettingDesc_haulProximities_Ignored><![CDATA[]]></CodeOptimist.JobsOfOpportunity_SettingDesc_haulProximities_Ignored>
  <CodeOptimist.JobsOfOpportunity_SettingTitle_haulProximities_Either><![CDATA[Either¹]]></CodeOptimist.JobsOfOpportunity_SettingTitle_haulProximities_Either>
  <CodeOptimist.JobsOfOpportunity_SettingDesc_haulProximities_Either><![CDATA[]]></CodeOptimist.JobsOfOpportunity_SettingDesc_haulProximities_Either>
  <CodeOptimist.JobsOfOpportunity_SettingTitle_haulProximities_Both><![CDATA[Both¹ (vanilla)]]></CodeOptimist.JobsOfOpportunity_SettingTitle_haulProximities_Both>
  <CodeOptimist.JobsOfOpportunity_SettingDesc_haulProximities_Both><![CDATA[]]></CodeOptimist.JobsOfOpportunity_SettingDesc_haulProximities_Both>
  <CodeOptimist.JobsOfOpportunity_SettingTitle_haulProximities_EitherThenIgnored><![CDATA[Either¹ → Ignored]]></CodeOptimist.JobsOfOpportunity_SettingTitle_haulProximities_EitherThenIgnored>
  <CodeOptimist.JobsOfOpportunity_SettingDesc_haulProximities_EitherThenIgnored><![CDATA[]]></CodeOptimist.JobsOfOpportunity_SettingDesc_haulProximities_EitherThenIgnored>
  <CodeOptimist.JobsOfOpportunity_SettingTitle_haulProximities_BothThenEither><![CDATA[Both¹ → Either¹]]></CodeOptimist.JobsOfOpportunity_SettingTitle_haulProximities_BothThenEither>
  <CodeOptimist.JobsOfOpportunity_SettingDesc_haulProximities_BothThenEither><![CDATA[]]></CodeOptimist.JobsOfOpportunity_SettingDesc_haulProximities_BothThenEither>
  <CodeOptimist.JobsOfOpportunity_SettingTitle_haulProximities_BothThenEitherThenIgnored><![CDATA[Both¹ → Either¹ → Ignored (recommended)]]></CodeOptimist.JobsOfOpportunity_SettingTitle_haulProximities_BothThenEitherThenIgnored>
  <CodeOptimist.JobsOfOpportunity_SettingDesc_haulProximities_BothThenEitherThenIgnored><![CDATA[]]></CodeOptimist.JobsOfOpportunity_SettingDesc_haulProximities_BothThenEitherThenIgnored>
  <CodeOptimist.JobsOfOpportunity_SettingTitle_showVanillaParameters><![CDATA[Show core/vanilla parameters…]]></CodeOptimist.JobsOfOpportunity_SettingTitle_showVanillaParameters>
  <CodeOptimist.JobsOfOpportunity_SettingDesc_showVanillaParameters><![CDATA[These settings are provided for explaining and tweaking the built-in opportunistic hauling.

Those marked with ¹ we only check during their phases above. On the "recommended" setting we use these not to limit hauls, but to decide those selected <i>first</i>, and thus they won't merit changing for most users.

Those marked with ² will always apply.

Right click to reset individual parameters. A value of 0 will skip the check.]]></CodeOptimist.JobsOfOpportunity_SettingDesc_showVanillaParameters>
  <CodeOptimist.JobsOfOpportunity_SettingTitle_maxNewLegsPctOrigTrip><![CDATA[²Max new legs % of original trip]]></CodeOptimist.JobsOfOpportunity_SettingTitle_maxNewLegsPctOrigTrip>
  <CodeOptimist.JobsOfOpportunity_SettingDesc_maxNewLegsPctOrigTrip><![CDATA[Max start-to-haulable + storage-to-job % of original trip.\nThis is straight-line distance ("as the crow flies"). Right click to reset.]]></CodeOptimist.JobsOfOpportunity_SettingDesc_maxNewLegsPctOrigTrip>
  <CodeOptimist.JobsOfOpportunity_SettingTitle_maxTotalTripPctOrigTrip><![CDATA[²Max total trip % of original trip]]></CodeOptimist.JobsOfOpportunity_SettingTitle_maxTotalTripPctOrigTrip>
  <CodeOptimist.JobsOfOpportunity_SettingDesc_maxTotalTripPctOrigTrip><![CDATA[This is straight-line distance ("as the crow flies"). Right click to reset.]]></CodeOptimist.JobsOfOpportunity_SettingDesc_maxTotalTripPctOrigTrip>
  <CodeOptimist.JobsOfOpportunity_SettingTitle_maxStartToThing><![CDATA[¹Max start-to-haulable]]></CodeOptimist.JobsOfOpportunity_SettingTitle_maxStartToThing>
  <CodeOptimist.JobsOfOpportunity_SettingDesc_maxStartToThing><![CDATA[This is straight-line distance ("as the crow flies"). Right click to reset.]]></CodeOptimist.JobsOfOpportunity_SettingDesc_maxStartToThing>
  <CodeOptimist.JobsOfOpportunity_SettingTitle_maxStartToThingPctOrigTrip><![CDATA[¹Max start-to-haulable % of original trip]]></CodeOptimist.JobsOfOpportunity_SettingTitle_maxStartToThingPctOrigTrip>
  <CodeOptimist.JobsOfOpportunity_SettingDesc_maxStartToThingPctOrigTrip><![CDATA[This is straight-line distance ("as the crow flies"). Right click to reset.]]></CodeOptimist.JobsOfOpportunity_SettingDesc_maxStartToThingPctOrigTrip>
  <CodeOptimist.JobsOfOpportunity_SettingTitle_maxStartToThingRegionLookCount><![CDATA[¹Max start-to-haulable region look count]]></CodeOptimist.JobsOfOpportunity_SettingTitle_maxStartToThingRegionLookCount>
  <CodeOptimist.JobsOfOpportunity_SettingDesc_maxStartToThingRegionLookCount><![CDATA[This parameter limits our actual pathing.
To understand it, enable <i>Development mode → inspector icon → Visibility → Draw Regions</i>.

Exploration begins from the start region spreading out to all neighbors until encountering the destination region. This setting caps the total number explored - even those in the wrong direction.

It can't be calculated perfectly from distance, as regions will vary in size and neighbors. (A corridor has only forward and back, so they're explored further.)
But in a completely open field, if a pawn must travel the distance of n=3 full-sized 12x12 regions (~36 tiles), the algorithm will explore 2(n^2+n)+1 or 25 regions.]]></CodeOptimist.JobsOfOpportunity_SettingDesc_maxStartToThingRegionLookCount>
  <CodeOptimist.JobsOfOpportunity_SettingTitle_maxStoreToJob><![CDATA[¹Max storage-to-job]]></CodeOptimist.JobsOfOpportunity_SettingTitle_maxStoreToJob>
  <CodeOptimist.JobsOfOpportunity_SettingDesc_maxStoreToJob><![CDATA[This is straight-line distance ("as the crow flies"). Right click to reset.]]></CodeOptimist.JobsOfOpportunity_SettingDesc_maxStoreToJob>
  <CodeOptimist.JobsOfOpportunity_SettingTitle_maxStoreToJobPctOrigTrip><![CDATA[¹Max storage-to-job % of original trip]]></CodeOptimist.JobsOfOpportunity_SettingTitle_maxStoreToJobPctOrigTrip>
  <CodeOptimist.JobsOfOpportunity_SettingDesc_maxStoreToJobPctOrigTrip><![CDATA[This is straight-line distance ("as the crow flies"). Right click to reset.]]></CodeOptimist.JobsOfOpportunity_SettingDesc_maxStoreToJobPctOrigTrip>
  <CodeOptimist.JobsOfOpportunity_SettingTitle_maxStoreToJobRegionLookCount><![CDATA[¹Max storage-to-job region look count]]></CodeOptimist.JobsOfOpportunity_SettingTitle_maxStoreToJobRegionLookCount>
  <CodeOptimist.JobsOfOpportunity_SettingDesc_maxStoreToJobRegionLookCount><![CDATA[This parameter limits our actual pathing.
To understand it, enable <i>Development mode → inspector icon → Visibility → Draw Regions</i>.

Exploration begins from the start region spreading out to all neighbors until encountering the destination region. This setting caps the total number explored - even those in the wrong direction.

It can't be calculated perfectly from distance, as regions will vary in size and neighbors. (A corridor has only forward and back, so they're explored further.)
But in a completely open field, if a pawn must travel the distance of n=3 full-sized 12x12 regions (~36 tiles), the algorithm will explore 2(n^2+n)+1 or 25 regions.]]></CodeOptimist.JobsOfOpportunity_SettingDesc_maxStoreToJobRegionLookCount>
</LanguageData>