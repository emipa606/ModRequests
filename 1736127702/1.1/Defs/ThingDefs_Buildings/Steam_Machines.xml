<?xml version="1.0" encoding="utf-8" ?>
<Defs>

  <!-- Gem Synthesizers -->

  <ThingDef ParentName="BuildingBase">
    <defName>RubySynthesizer</defName>
    <label>ruby synthesizer</label>
    <description>Slowly generates rubies by using the heat and minerals contained by the steam provided to it.</description>
    <graphicData>
      <texPath>Things/Building/GemSynthesizer</texPath>
      <graphicClass>Graphic_Single</graphicClass>
      <drawSize>(1, 2)</drawSize>
      <drawOffset>(0,0,0.5)</drawOffset>
      <shadowData>
        <volume>(0.27,0.25,0.27)</volume>
        <offset>(0,0,0)</offset>
      </shadowData>
    </graphicData>
    <costList>
      <Steel>25</Steel>
	    <CaS_Bronze>50</CaS_Bronze>
	    <BrassGears>3</BrassGears>
      <RubyLens>3</RubyLens>
    </costList>
    <comps>
      <li Class="CompProperties_Power">
        <compClass>CompPowerTrader</compClass>
        <basePowerConsumption>50</basePowerConsumption>
      </li>
      <li Class="CompProperties_Breakdownable"/>
      <li Class="CompProperties_Flickable"/>
      <li Class="CompProperties_Spawner">
        <requiresPower>true</requiresPower>
        <thingToSpawn>CaS_Ruby</thingToSpawn>
        <spawnCount>5</spawnCount>
        <spawnIntervalRange><min>150000</min><max>150000</max></spawnIntervalRange>
        <writeTimeLeftToSpawn>true</writeTimeLeftToSpawn>
        <showMessageIfOwned>true</showMessageIfOwned>
      </li>
    </comps>
    <altitudeLayer>Building</altitudeLayer>
    <passability>PassThroughOnly</passability>
    <statBases>
      <MaxHitPoints>200</MaxHitPoints>
      <Flammability>0.5</Flammability>
      <Beauty>-3</Beauty>
      <Mass>35</Mass>
      <WorkToBuild>2000</WorkToBuild>
    </statBases>
    <tickerType>Normal</tickerType>
    <size>(1, 1)</size>
    <fillPercent>0.5</fillPercent>
    <terrainAffordanceNeeded>Medium</terrainAffordanceNeeded>
    <rotatable>false</rotatable>
    <canOverlapZones>false</canOverlapZones>
    <minifiedDef>MinifiedThing</minifiedDef>
    <thingCategories>
      <li>BuildingsSteam</li>
    </thingCategories>
    <designationCategory>Steampunk</designationCategory>
    <designatorDropdown>CaS_GemSynthesizer</designatorDropdown>
    <researchPrerequisites>
      <li>SteamMachines</li>
    </researchPrerequisites>
  </ThingDef>

  <ThingDef ParentName="BuildingBase">
    <defName>SapphireSynthesizer</defName>
    <label>sapphire synthesizer</label>
    <description>Slowly generates sapphires by using the heat and minerals contained by the steam provided to it.</description>
    <graphicData>
      <texPath>Things/Building/GemSynthesizer</texPath>
      <graphicClass>Graphic_Single</graphicClass>
      <drawSize>(1, 2)</drawSize>
      <drawOffset>(0,0,0.5)</drawOffset>
      <shadowData>
        <volume>(0.27,0.25,0.27)</volume>
        <offset>(0,0,0)</offset>
      </shadowData>
    </graphicData>
    <costList>
      <Steel>25</Steel>
	    <CaS_Bronze>50</CaS_Bronze>
	    <BrassGears>3</BrassGears>
      <SapphireLens>3</SapphireLens>
    </costList>
    <comps>
      <li Class="CompProperties_Power">
        <compClass>CompPowerTrader</compClass>
        <basePowerConsumption>50</basePowerConsumption>
      </li>
      <li Class="CompProperties_Breakdownable"/>
      <li Class="CompProperties_Flickable"/>
      <li Class="CompProperties_Spawner">
        <requiresPower>true</requiresPower>
        <thingToSpawn>CaS_Sapphire</thingToSpawn>
        <spawnCount>5</spawnCount>
        <spawnIntervalRange><min>150000</min><max>150000</max></spawnIntervalRange>
        <writeTimeLeftToSpawn>true</writeTimeLeftToSpawn>
        <showMessageIfOwned>true</showMessageIfOwned>
      </li>
    </comps>
    <altitudeLayer>Building</altitudeLayer>
    <passability>PassThroughOnly</passability>
    <statBases>
      <MaxHitPoints>200</MaxHitPoints>
      <Flammability>0.5</Flammability>
      <Beauty>-3</Beauty>
      <Mass>35</Mass>
      <WorkToBuild>2000</WorkToBuild>
    </statBases>
    <tickerType>Normal</tickerType>
    <size>(1, 1)</size>
    <fillPercent>0.5</fillPercent>
    <terrainAffordanceNeeded>Medium</terrainAffordanceNeeded>
    <rotatable>false</rotatable>
    <canOverlapZones>false</canOverlapZones>
    <minifiedDef>MinifiedThing</minifiedDef>
    <thingCategories>
      <li>BuildingsSteam</li>
    </thingCategories>
    <designationCategory>Steampunk</designationCategory>
    <designatorDropdown>CaS_GemSynthesizer</designatorDropdown>
    <researchPrerequisites>
      <li>SteamMachines</li>
    </researchPrerequisites>
  </ThingDef>

  <DesignatorDropdownGroupDef>
		<defName>CaS_GemSynthesizer</defName>
	</DesignatorDropdownGroupDef>	

  <!-- Other Machines -->

  <ThingDef ParentName="BuildingBase">
    <defName>WheelCutter</defName>
    <label>wheel-cutting engine</label>
    <description>A machine that produces gears from brass provided in adjacent industrial hoppers.</description>
    <graphicData>
      <texPath>Things/Building/WheelCutter</texPath>
      <graphicClass>Graphic_Single</graphicClass>
      <drawSize>(1, 2)</drawSize>
      <drawOffset>(0,0,0.5)</drawOffset>
      <shadowData>
        <volume>(0.27,0.25,0.27)</volume>
        <offset>(0,0,0)</offset>
      </shadowData>
    </graphicData>
    <costList>
      <Steel>100</Steel>
      <CaS_Brass>50</CaS_Brass>
	    <CaS_Bronze>25</CaS_Bronze>
	    <BrassGears>4</BrassGears>
    </costList>
    <building>
      <wantsHopperAdjacent>true</wantsHopperAdjacent>
    </building>
    <comps>
      <li Class="CompProperties_Power">
        <compClass>CompPowerTrader</compClass>
        <basePowerConsumption>100</basePowerConsumption>
      </li>
      <li Class="CompProperties_Breakdownable"/>
      <li Class="CompProperties_Flickable"/>
      <li Class="Clockwork.CompProperties_ClockworkMachine">
        <requiresPower>true</requiresPower>
        <machineInput>CaS_Brass</machineInput>
        <machineMaterialCost>10</machineMaterialCost>
        <machineOutput>BrassGears</machineOutput>
        <hoursToAssembly>2</hoursToAssembly>
      </li>
    </comps>
    <altitudeLayer>Building</altitudeLayer>
    <passability>PassThroughOnly</passability>
    <statBases>
      <MaxHitPoints>200</MaxHitPoints>
      <Flammability>0.5</Flammability>
      <Beauty>-3</Beauty>
      <Mass>35</Mass>
      <WorkToBuild>2000</WorkToBuild>
    </statBases>
    <tickerType>Normal</tickerType>
    <size>(1, 1)</size>
    <fillPercent>0.5</fillPercent>
    <terrainAffordanceNeeded>Medium</terrainAffordanceNeeded>
    <rotatable>false</rotatable>
    <canOverlapZones>false</canOverlapZones>
    <minifiedDef>MinifiedThing</minifiedDef>
    <thingCategories>
      <li>BuildingsSteam</li>
    </thingCategories>
    <designationCategory>Steampunk</designationCategory>
    <designatorDropdown>CaS_SimpleMachine</designatorDropdown>
    <researchPrerequisites>
      <li>SteamMachines</li>
    </researchPrerequisites>
  </ThingDef>

  <ThingDef ParentName="BuildingBase">
    <defName>SpringCoiler</defName>
    <label>spring-coiling machine</label>
    <description>A machine that produces springs from steel provided in adjacent industrial hoppers.</description>
    <graphicData>
      <texPath>Things/Building/SpringCoiler</texPath>
      <graphicClass>Graphic_Single</graphicClass>
      <drawSize>(1, 2)</drawSize>
      <drawOffset>(0,0,0.5)</drawOffset>
      <shadowData>
        <volume>(0.27,0.25,0.27)</volume>
        <offset>(0,0,0)</offset>
      </shadowData>
    </graphicData>
    <costList>
      <Steel>150</Steel>
      <CaS_Brass>50</CaS_Brass>
	    <BrassGears>5</BrassGears>
    </costList>
    <building>
      <wantsHopperAdjacent>true</wantsHopperAdjacent>
    </building>
    <comps>
      <li Class="CompProperties_Power">
        <compClass>CompPowerTrader</compClass>
        <basePowerConsumption>100</basePowerConsumption>
      </li>
      <li Class="CompProperties_Breakdownable"/>
      <li Class="CompProperties_Flickable"/>
      <li Class="Clockwork.CompProperties_ClockworkMachine">
        <requiresPower>true</requiresPower>
        <machineInput>Steel</machineInput>
        <machineMaterialCost>10</machineMaterialCost>
        <machineOutput>SteelSpring</machineOutput>
        <hoursToAssembly>2</hoursToAssembly>
      </li>
    </comps>
    <altitudeLayer>Building</altitudeLayer>
    <passability>PassThroughOnly</passability>
    <statBases>
      <MaxHitPoints>200</MaxHitPoints>
      <Flammability>0.5</Flammability>
      <Beauty>-3</Beauty>
      <Mass>35</Mass>
      <WorkToBuild>2000</WorkToBuild>
    </statBases>
    <tickerType>Normal</tickerType>
    <size>(1, 1)</size>
    <fillPercent>0.5</fillPercent>
    <terrainAffordanceNeeded>Medium</terrainAffordanceNeeded>
    <rotatable>false</rotatable>
    <canOverlapZones>false</canOverlapZones>
    <minifiedDef>MinifiedThing</minifiedDef>
    <thingCategories>
      <li>BuildingsSteam</li>
    </thingCategories>
    <designationCategory>Steampunk</designationCategory>
    <designatorDropdown>CaS_SimpleMachine</designatorDropdown>
    <researchPrerequisites>
      <li>SteamMachines</li>
    </researchPrerequisites>
  </ThingDef>

  <ThingDef ParentName="BuildingBase">
    <defName>RubyProcessor</defName>
    <label>ruby processor</label>
    <description>A machine that produces ruby lenses from rubies provided in adjacent industrial hoppers.</description>
    <graphicData>
      <texPath>Things/Building/GemProcessor</texPath>
      <graphicClass>Graphic_Single</graphicClass>
      <drawSize>(1, 2)</drawSize>
      <drawOffset>(0,0,0.5)</drawOffset>
      <shadowData>
        <volume>(0.27,0.25,0.27)</volume>
        <offset>(0,0,0)</offset>
      </shadowData>
    </graphicData>
    <costList>
      <Steel>100</Steel>
      <CaS_Brass>50</CaS_Brass>
	    <CaS_Bronze>25</CaS_Bronze>
	    <BrassGears>4</BrassGears>
      <SteelSpring>3</SteelSpring>
    </costList>
    <building>
      <wantsHopperAdjacent>true</wantsHopperAdjacent>
    </building>
    <comps>
      <li Class="CompProperties_Power">
        <compClass>CompPowerTrader</compClass>
        <basePowerConsumption>100</basePowerConsumption>
      </li>
      <li Class="CompProperties_Breakdownable"/>
      <li Class="CompProperties_Flickable"/>
      <li Class="Clockwork.CompProperties_ClockworkMachine">
        <requiresPower>true</requiresPower>
        <machineInput>CaS_Ruby</machineInput>
        <machineOutput>RubyLens</machineOutput>
        <hoursToAssembly>6</hoursToAssembly>
      </li>
    </comps>
    <altitudeLayer>Building</altitudeLayer>
    <passability>PassThroughOnly</passability>
    <statBases>
      <MaxHitPoints>200</MaxHitPoints>
      <Flammability>0.5</Flammability>
      <Beauty>-3</Beauty>
      <Mass>35</Mass>
      <WorkToBuild>2000</WorkToBuild>
    </statBases>
    <tickerType>Normal</tickerType>
    <size>(1, 1)</size>
    <fillPercent>0.5</fillPercent>
    <terrainAffordanceNeeded>Medium</terrainAffordanceNeeded>
    <rotatable>false</rotatable>
    <canOverlapZones>false</canOverlapZones>
    <minifiedDef>MinifiedThing</minifiedDef>
    <thingCategories>
      <li>BuildingsSteam</li>
    </thingCategories>
    <designationCategory>Steampunk</designationCategory>
    <designatorDropdown>CaS_SimpleMachine</designatorDropdown>
    <researchPrerequisites>
      <li>SteamMachines</li>
    </researchPrerequisites>
  </ThingDef>

  <ThingDef ParentName="BuildingBase">
    <defName>SapphireProcessor</defName>
    <label>sapphire processor</label>
    <description>A machine that produces sapphire lenses from sapphires provided in adjacent industrial hoppers.</description>
    <graphicData>
      <texPath>Things/Building/GemProcessor</texPath>
      <graphicClass>Graphic_Single</graphicClass>
      <drawSize>(1, 2)</drawSize>
      <drawOffset>(0,0,0.5)</drawOffset>
      <shadowData>
        <volume>(0.27,0.25,0.27)</volume>
        <offset>(0,0,0)</offset>
      </shadowData>
    </graphicData>
    <costList>
      <Steel>100</Steel>
      <CaS_Brass>50</CaS_Brass>
	    <CaS_Bronze>25</CaS_Bronze>
	    <BrassGears>4</BrassGears>
      <SteelSpring>3</SteelSpring>
    </costList>
    <building>
      <wantsHopperAdjacent>true</wantsHopperAdjacent>
    </building>
    <comps>
      <li Class="CompProperties_Power">
        <compClass>CompPowerTrader</compClass>
        <basePowerConsumption>100</basePowerConsumption>
      </li>
      <li Class="CompProperties_Breakdownable"/>
      <li Class="CompProperties_Flickable"/>
      <li Class="Clockwork.CompProperties_ClockworkMachine">
        <requiresPower>true</requiresPower>
        <machineInput>CaS_Sapphire</machineInput>
        <machineOutput>SapphireLens</machineOutput>
        <hoursToAssembly>6</hoursToAssembly>
      </li>
    </comps>
    <altitudeLayer>Building</altitudeLayer>
    <passability>PassThroughOnly</passability>
    <statBases>
      <MaxHitPoints>200</MaxHitPoints>
      <Flammability>0.5</Flammability>
      <Beauty>-3</Beauty>
      <Mass>35</Mass>
      <WorkToBuild>2000</WorkToBuild>
    </statBases>
    <tickerType>Normal</tickerType>
    <size>(1, 1)</size>
    <fillPercent>0.5</fillPercent>
    <terrainAffordanceNeeded>Medium</terrainAffordanceNeeded>
    <rotatable>false</rotatable>
    <canOverlapZones>false</canOverlapZones>
    <minifiedDef>MinifiedThing</minifiedDef>
    <thingCategories>
      <li>BuildingsSteam</li>
    </thingCategories>
    <designationCategory>Steampunk</designationCategory>
    <designatorDropdown>CaS_SimpleMachine</designatorDropdown>
    <researchPrerequisites>
      <li>SteamMachines</li>
    </researchPrerequisites>
  </ThingDef>


  <DesignatorDropdownGroupDef>
		<defName>CaS_SimpleMachine</defName>
	</DesignatorDropdownGroupDef>	


  <!-- Hoppers/Chutes -->


  <ThingDef ParentName="BuildingBase">
    <defName>ClockworkInput</defName>
    <label>industrial hopper</label>
    <description>Holds resources for use by various steam-powered machines.</description>
    <thingClass>Building_Storage</thingClass>
    <graphicData>
      <texPath>Things/Building/Production/Hopper</texPath>
      <graphicClass>Graphic_Multi</graphicClass>
      <color>(255, 160, 70)</color>
      <damageData>
        <rect>(0.05,0.1,0.9,0.9)</rect>
        <cornerTL>Damage/Corner</cornerTL>
        <cornerTR>Damage/Corner</cornerTR>
      </damageData>
    </graphicData>
    <altitudeLayer>Building</altitudeLayer>
    <passability>PassThroughOnly</passability>
    <fillPercent>0.5</fillPercent>
    <pathCost>70</pathCost>
    <canOverlapZones>false</canOverlapZones>
    <building>
      <defaultStorageSettings>
        <priority>Important</priority>
        <filter>
          <categories>
            <li>ResourcesRaw</li>
            <li>Clockwork</li>
          </categories>
        </filter>
      </defaultStorageSettings>
    </building>
    <inspectorTabs>
      <li>ITab_Storage</li>
    </inspectorTabs>
    <castEdgeShadows>true</castEdgeShadows>
    <statBases>
      <WorkToBuild>300</WorkToBuild>
      <MaxHitPoints>100</MaxHitPoints>
      <Flammability>0.5</Flammability>
      <Mass>10</Mass>
    </statBases>
    <costList>
      <CaS_Brass>10</CaS_Brass>
    </costList>
    <tickerType>Never</tickerType>
    <rotatable>true</rotatable>
    <neverMultiSelect>true</neverMultiSelect>
    <minifiedDef>MinifiedThing</minifiedDef>
    <thingCategories>
      <li>BuildingsSteam</li>
    </thingCategories>
    <designationCategory>Steampunk</designationCategory>
    <surfaceType>Item</surfaceType>
    <placeWorkers>
      <li>PlaceWorker_NextToHopperAccepter</li>
    </placeWorkers>
    <constructEffect>ConstructMetal</constructEffect>
    <researchPrerequisites>
      <li>SteamMachines</li>
    </researchPrerequisites>
    <uiIconScale>0.75</uiIconScale>
    <designatorDropdown>CaS_IO</designatorDropdown>
  </ThingDef>

  <ThingDef ParentName="BuildingBase">
    <defName>ClockworkOutput</defName>
    <label>output</label>
    <description>Holds manufactured components from machines.</description>
    <thingClass>Building_Storage</thingClass>
    <graphicData>
      <texPath>Things/Building/ClockworkOutput</texPath>
      <graphicClass>Graphic_Multi</graphicClass>
      <drawSize>(0.75,0.75)</drawSize>
      <damageData>
        <rect>(0.05,0.1,0.9,0.9)</rect>
        <cornerTL>Damage/Corner</cornerTL>
        <cornerTR>Damage/Corner</cornerTR>
      </damageData>
    </graphicData>
    <altitudeLayer>Building</altitudeLayer>
    <passability>PassThroughOnly</passability>
    <fillPercent>0.5</fillPercent>
    <pathCost>70</pathCost>
    <canOverlapZones>false</canOverlapZones>
    <building>
      <defaultStorageSettings>
        <priority>Low</priority>
        <filter>
          <categories>
            <li>ResourcesRaw</li>
            <li>Clockwork</li>
          </categories>
        </filter>
      </defaultStorageSettings>
    </building>
    <inspectorTabs>
      <li>ITab_Storage</li>
    </inspectorTabs>
    <castEdgeShadows>true</castEdgeShadows>
    <statBases>
      <WorkToBuild>300</WorkToBuild>
      <MaxHitPoints>100</MaxHitPoints>
      <Flammability>0.5</Flammability>
      <Mass>5</Mass>
    </statBases>
    <costList>
      <CaS_Brass>5</CaS_Brass>
    </costList>
    <tickerType>Never</tickerType>
    <rotatable>true</rotatable>
    <neverMultiSelect>true</neverMultiSelect>
    <minifiedDef>MinifiedThing</minifiedDef>
    <thingCategories>
      <li>BuildingsSteam</li>
    </thingCategories>
    <designationCategory>Steampunk</designationCategory>
    <surfaceType>Item</surfaceType>
    <placeWorkers>
      <li>PlaceWorker_NextToHopperAccepter</li>
    </placeWorkers>
    <constructEffect>ConstructMetal</constructEffect>
    <researchPrerequisites>
      <li>SteamMachines</li>
    </researchPrerequisites>
    <uiIconScale>0.75</uiIconScale>
    <designatorDropdown>CaS_IO</designatorDropdown>
  </ThingDef>

  <DesignatorDropdownGroupDef>
		<defName>CaS_IO</defName>
	</DesignatorDropdownGroupDef>	

</Defs>