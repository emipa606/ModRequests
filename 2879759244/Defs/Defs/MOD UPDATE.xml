<?xml version="1.0" encoding="utf-8"?>
<Defs>
  <ThoughtDef ParentName="DeathMemory">
    <defName>KnowPrisonerDiedInnocent</defName>
    <durationDays>1</durationDays>
    <stackLimit>1</stackLimit>
    <nullifyingTraits>
      <li>Psychopath</li>
      <li>Bloodlust</li>
    </nullifyingTraits>
    <stages>
      <li>
        <label>innocent prisoner died</label>
        <description>One of our prisoners died despite being harmless. He is now harmless in someother place better than this one.</description>
        <baseMoodEffect>0</baseMoodEffect>
      </li>
	  <li MayRequire="Ludeon.RimWorld.Biotech">
        <label>someone was ripscanned</label>
        <!-- died due to ripscanning -->
        <description>A prisoner died in our ripscanner. Their brain was burned up to feed the machine. It's horrible.</description>
        <baseMoodEffect>0</baseMoodEffect>
      </li>
    </stages>
  </ThoughtDef>
  <ThoughtDef ParentName="DeathMemory">
    <defName>KnowGuestExecuted</defName>
    <durationDays>1</durationDays>
    <nullifyingTraits>
      <li>Psychopath</li>
      <li>Bloodlust</li>
    </nullifyingTraits>
    <stages>
      <li>
        <label>justified execution</label>
        <description>A guilty prisoner or guest was executed. It was justified.</description>
        <baseMoodEffect>0</baseMoodEffect>
      </li>
      <li>
        <label>someone was euthanized</label>
        <!-- generic humane -->
        <description>A prisoner or guest was euthanized. It was humane, better off this way.</description>
        <baseMoodEffect>0</baseMoodEffect>
      </li>
      <li>
        <label>someone was executed</label>
        <!-- generic brutal -->
        <description>A prisoner or guest was killed in cold blood. </description>
        <baseMoodEffect>0</baseMoodEffect>
      </li>
      <li>
        <label>someone organ-harvested</label>
        <!-- died because of organ harvesting -->
        <description>A prisoner or guest died because the colony took body parts from him. </description>
        <baseMoodEffect>0</baseMoodEffect>
      </li>
	  <li MayRequire="Ludeon.RimWorld.Biotech">
        <label>someone was ripscanned</label>
        <!-- died due to ripscanning -->
        <description>A prisoner died in our ripscanner. Their brain was burned up to feed the machine. It's horrible.</description>
        <baseMoodEffect>0</baseMoodEffect>
      </li>
    </stages>
  </ThoughtDef>
  <ThoughtDef>
    <defName>ExecutedPrisoner</defName>
    <thoughtClass>Thought_Tale</thoughtClass>
    <workerClass>ThoughtWorker_Tale</workerClass>
    <taleDef>ExecutedPrisoner</taleDef>
    <validWhileDespawned>true</validWhileDespawned>
    <stages>
      <li>
        <label>executed prisoner</label>
        <baseOpinionOffset>0</baseOpinionOffset>
      </li>
    </stages>
    <nullifiedIfNotColonist>true</nullifiedIfNotColonist>
  </ThoughtDef>
  <ThoughtDef>
    <defName>KnowGuestOrganHarvested</defName>
    <durationDays>1</durationDays>
    <stackLimit>1</stackLimit>
    <stackedEffectMultiplier>0</stackedEffectMultiplier>
    <nullifyingTraits>
      <li>Psychopath</li>
    </nullifyingTraits>
    <stages>
      <li>
        <label>someone's organ harvested</label>
        <description>The colony took body parts from a guest or prisoner. It's for the greater good.</description>
        <baseMoodEffect>0</baseMoodEffect>
      </li>
    </stages>
  </ThoughtDef>
    <ThoughtDef>
    <defName>XenogermHarvested_Prisoner</defName>
    <durationDays>1</durationDays>
    <stackLimit>1</stackLimit>
    <stackedEffectMultiplier>0</stackedEffectMultiplier>
    <nullifyingTraits>
      <li>Psychopath</li>
    </nullifyingTraits>
    <stages>
      <li>
        <label>someone's blood harvested</label>
        <description>The colony took blood from a guest or prisoner. It's for the greater good.</description>
        <baseMoodEffect>0</baseMoodEffect>
      </li>
    </stages>
	<nullifiedIfNotColonist>true</nullifiedIfNotColonist>
  </ThoughtDef>
</Defs>