<?xml version="1.0" encoding="utf-8" ?>
<Defs>
<!-- Banshee -->
  <ThingDef ParentName="NECShipBase">
    <defName>Banshee</defName> <!-- defName must be unique, including with other mods so be creative -->
    <label>Banshee</label> <!-- name displayed ingame -->
    <description>Similar to the Siege Tank in its ability to make quick work of ground troops, the Banshee is an aerial harbinger of destruction. Agile twin turbofans accompany cloaking technologies and powerful backlash rockets, making the Banshee the militaryâ€™s most capable hit-and-run option when the situation demands nothing less.
	
Passenger cap: 1
----------------------------
Speed: 30 tile/hr
Fuel capacity: 2500L
Fuel efficiency: 2 fuel/tile
----------------------------
Cargo capacity: 150kg</description>
    <graphicData>
      <texPath>Vehicle/Banshee/Banshee</texPath>
      <graphicClass>Graphic_Multi</graphicClass>
      <drawSize>(10,10)</drawSize> <!-- how much the image is stretched out ingame -->
    </graphicData>
    <size>(3,4)</size> <!-- hitbox -->
    <statBases>
      <MaxHitPoints>1250</MaxHitPoints> <!-- hitpoints of the building -->
      <WorkToBuild>30000</WorkToBuild> <!-- how much work it costs to build, which is more like a base type, as more properties affect it, resulting in a different final number for construction -->
      <Flammability>0</Flammability>
      <Mass>20</Mass> <!-- how much it weighs for a pawn to carry. My guess is they are light in this mod so pawns entering a map will throw it in their inventory rather than lose it, but i can check that later. -->
      <Beauty>5</Beauty> <!-- beauty on overlap, and for pawns -->
    </statBases>
    <costList> <!-- Costs to build, the names are the defNames of items -->
      <Steel>2500</Steel>
      <Plasteel>500</Plasteel>
	  <Gold>50</Gold>
      <ComponentIndustrial>25</ComponentIndustrial>
	  <ComponentSpacer>10</ComponentSpacer>
    </costList>
    <comps>
      <li Class="CompProperties_Transporter">
        <restEffectiveness>0.75</restEffectiveness>
        <massCapacity>150</massCapacity>
      </li>
      <li Class="SRTS.CompProperties_LaunchableSRTS"> <!-- required for SRTS like functionality (ie. space ship reusable drop pod -->
        <travelSpeed>30</travelSpeed>
        <fuelPerTile>2</fuelPerTile>
        <minPassengers>1</minPassengers>
        <maxPassengers>1</maxPassengers>
      	<spaceFaring>true</spaceFaring>
      	<shuttleBayLanding>true</shuttleBayLanding>
      </li>
	  <li Class="SRTS.CompProperties_BombsAway"> <!-- include this comp if you want it to be able to carpet bomb, remove this comp if you dont -->
        <numberBombs>8</numberBombs> <!-- num dropped per run -->
        <precisionBombingNumBombs>8</precisionBombingNumBombs> <!-- number of bombs dropped in precise drop -->
        <radiusOfDrop>2</radiusOfDrop> <!-- how many cells out from the center the bombs may drop -->
        <speed>1</speed> <!-- How quickly the ship flies over. Default 1 -->
        <distanceBetweenDrops>2</distanceBetweenDrops> <!-- Distance in cells from when each bomb is dropped -->
	  </li>
      <li Class="CompProperties_Refuelable"> <!-- comp for allowing to fuel the srts, don't remove -->
        <fuelCapacity>2500</fuelCapacity>
        <targetFuelLevelConfigurable>true</targetFuelLevelConfigurable>
        <initialConfigurableTargetFuelLevel>150</initialConfigurableTargetFuelLevel>
        <fuelFilter>
          <thingDefs>
            <li>Chemfuel</li>
          </thingDefs>
        </fuelFilter>
        <consumeFuelOnlyWhenUsed>true</consumeFuelOnlyWhenUsed>
        <initialFuelPercent>0.25</initialFuelPercent>
        <autoRefuelPercent>1</autoRefuelPercent>
        <showFuelGizmo>true</showFuelGizmo>
        <drawOutOfFuelOverlay>false</drawOutOfFuelOverlay>
        <drawFuelGaugeInMap>false</drawFuelGaugeInMap>
      </li>
      <li Class="CompProperties_Breakdownable" />
      <li Class="CompProperties_Flickable" />
    </comps>
    <researchPrerequisites>
      <li>Banshee</li>
    </researchPrerequisites>
    <constructionSkillPrerequisite>8</constructionSkillPrerequisite> <!-- construction skill requirements -->
    <uiIconScale>0.3</uiIconScale> <!-- UI scaling -->
    <killedLeavings>
      <ChunkSlagSteel>16</ChunkSlagSteel>
    </killedLeavings>
  </ThingDef>
  
  <!-- Griffon -->
  <ThingDef ParentName="NECShipBase">
    <defName>Griffon</defName> <!-- defName must be unique, including with other mods so be creative -->
    <label>Griffon</label> <!-- name displayed ingame -->
    <description>The Griffon is a type of terran starfighter used by Mira's Marauders and the Kel-Morian Combine. They are usually controlled by an AI. 
	
Passenger cap: 1
----------------------------
Speed: 55 tile/hr
Fuel capacity: 2000L
Fuel efficiency: 3 fuel/tile
----------------------------
Cargo capacity: 100kg</description>
    <graphicData>
      <texPath>Vehicle/Griffon/Griffon</texPath>
      <graphicClass>Graphic_Multi</graphicClass>
      <drawSize>(9,9)</drawSize> <!-- how much the image is stretched out ingame -->
    </graphicData>
    <size>(3,4)</size> <!-- hitbox -->
    <statBases>
      <MaxHitPoints>1000</MaxHitPoints> <!-- hitpoints of the building -->
      <WorkToBuild>20000</WorkToBuild> <!-- how much work it costs to build, which is more like a base type, as more properties affect it, resulting in a different final number for construction -->
      <Flammability>0</Flammability>
      <Mass>20</Mass> <!-- how much it weighs for a pawn to carry. My guess is they are light in this mod so pawns entering a map will throw it in their inventory rather than lose it, but i can check that later. -->
      <Beauty>5</Beauty> <!-- beauty on overlap, and for pawns -->
    </statBases>
    <costList> <!-- Costs to build, the names are the defNames of items -->
      <Steel>2000</Steel>
      <Plasteel>400</Plasteel>
	  <Gold>25</Gold>
      <ComponentIndustrial>18</ComponentIndustrial>
	  <ComponentSpacer>8</ComponentSpacer>
    </costList>
    <comps>
      <li Class="CompProperties_Transporter">
        <restEffectiveness>0.75</restEffectiveness>
        <massCapacity>100</massCapacity>
      </li>
      <li Class="SRTS.CompProperties_LaunchableSRTS"> <!-- required for SRTS like functionality (ie. space ship reusable drop pod -->
        <travelSpeed>55</travelSpeed>
        <fuelPerTile>3</fuelPerTile>
        <minPassengers>1</minPassengers>
        <maxPassengers>1</maxPassengers>
      	<spaceFaring>true</spaceFaring>
      	<shuttleBayLanding>true</shuttleBayLanding>
      </li>
	  <li Class="SRTS.CompProperties_BombsAway"> <!-- include this comp if you want it to be able to carpet bomb, remove this comp if you dont -->
        <numberBombs>4</numberBombs> <!-- num dropped per run -->
        <precisionBombingNumBombs>2</precisionBombingNumBombs> <!-- number of bombs dropped in precise drop -->
        <radiusOfDrop>2</radiusOfDrop> <!-- how many cells out from the center the bombs may drop -->
        <speed>1</speed> <!-- How quickly the ship flies over. Default 1 -->
        <distanceBetweenDrops>2</distanceBetweenDrops> <!-- Distance in cells from when each bomb is dropped -->
	  </li>
      <li Class="CompProperties_Refuelable"> <!-- comp for allowing to fuel the srts, don't remove -->
        <fuelCapacity>2000</fuelCapacity>
        <targetFuelLevelConfigurable>true</targetFuelLevelConfigurable>
        <initialConfigurableTargetFuelLevel>150</initialConfigurableTargetFuelLevel>
        <fuelFilter>
          <thingDefs>
            <li>Chemfuel</li>
          </thingDefs>
        </fuelFilter>
        <consumeFuelOnlyWhenUsed>true</consumeFuelOnlyWhenUsed>
        <initialFuelPercent>0.25</initialFuelPercent>
        <autoRefuelPercent>1</autoRefuelPercent>
        <showFuelGizmo>true</showFuelGizmo>
        <drawOutOfFuelOverlay>false</drawOutOfFuelOverlay>
        <drawFuelGaugeInMap>false</drawFuelGaugeInMap>
      </li>
      <li Class="CompProperties_Breakdownable" />
      <li Class="CompProperties_Flickable" />
    </comps>
    <researchPrerequisites>
      <li>Griffon</li>
    </researchPrerequisites>
    <constructionSkillPrerequisite>8</constructionSkillPrerequisite> <!-- construction skill requirements -->
    <uiIconScale>0.4</uiIconScale> <!-- UI scaling -->
    <killedLeavings>
      <ChunkSlagSteel>12</ChunkSlagSteel>
    </killedLeavings>
  </ThingDef>
  
  <!-- Medivac -->
  <ThingDef ParentName="NECShipBase">
    <defName>Medivac</defName> <!-- defName must be unique, including with other mods so be creative -->
    <label>Medivac</label> <!-- name displayed ingame -->
    <description>The medical evacuation dropship, officially designated as the G-226 medical transport and called the medivac for short, is a terran aerospace transport that also provides medical support for wounded troops in the battlefield. 
	
Passenger cap: 20
----------------------------
Speed: 40 tile/hr
Fuel capacity: 5000L
Fuel efficiency: 5 fuel/tile
----------------------------
Cargo capacity: 30 000kg</description>
    <graphicData>
      <texPath>Vehicle/Medivac/Medivac</texPath>
      <graphicClass>Graphic_Multi</graphicClass>
      <drawSize>(31,31)</drawSize> <!-- how much the image is stretched out ingame -->
    </graphicData>
    <size>(12,12)</size> <!-- hitbox -->
    <statBases>
      <MaxHitPoints>2500</MaxHitPoints> <!-- hitpoints of the building -->
      <WorkToBuild>25000</WorkToBuild> <!-- how much work it costs to build, which is more like a base type, as more properties affect it, resulting in a different final number for construction -->
      <Flammability>0</Flammability>
      <Mass>20</Mass> <!-- how much it weighs for a pawn to carry. My guess is they are light in this mod so pawns entering a map will throw it in their inventory rather than lose it, but i can check that later. -->
      <Beauty>5</Beauty> <!-- beauty on overlap, and for pawns -->
    </statBases>
    <costList> <!-- Costs to build, the names are the defNames of items -->
      <Steel>5000</Steel>
      <Plasteel>1200</Plasteel>
	  <Gold>400</Gold>
      <ComponentIndustrial>36</ComponentIndustrial>
	  <ComponentSpacer>20</ComponentSpacer>
    </costList>
    <comps>
      <li Class="CompProperties_Transporter">
        <restEffectiveness>0.75</restEffectiveness>
        <massCapacity>30000</massCapacity>
      </li>
      <li Class="SRTS.CompProperties_LaunchableSRTS"> <!-- required for SRTS like functionality (ie. space ship reusable drop pod -->
        <travelSpeed>40</travelSpeed>
        <fuelPerTile>5</fuelPerTile>
        <minPassengers>1</minPassengers>
        <maxPassengers>20</maxPassengers>
      	<spaceFaring>true</spaceFaring>
      	<shuttleBayLanding>true</shuttleBayLanding>
      </li>
      <li Class="CompProperties_Refuelable"> <!-- comp for allowing to fuel the srts, don't remove -->
        <fuelCapacity>5000</fuelCapacity>
        <targetFuelLevelConfigurable>true</targetFuelLevelConfigurable>
        <initialConfigurableTargetFuelLevel>300</initialConfigurableTargetFuelLevel>
        <fuelFilter>
          <thingDefs>
            <li>Chemfuel</li>
          </thingDefs>
        </fuelFilter>
        <consumeFuelOnlyWhenUsed>true</consumeFuelOnlyWhenUsed>
        <initialFuelPercent>0.25</initialFuelPercent>
        <autoRefuelPercent>1</autoRefuelPercent>
        <showFuelGizmo>true</showFuelGizmo>
        <drawOutOfFuelOverlay>false</drawOutOfFuelOverlay>
        <drawFuelGaugeInMap>false</drawFuelGaugeInMap>
      </li>
      <li Class="CompProperties_Breakdownable" />
      <li Class="CompProperties_Flickable" />
    </comps>
    <researchPrerequisites>
      <li>Medivac</li>
    </researchPrerequisites>
    <constructionSkillPrerequisite>8</constructionSkillPrerequisite> <!-- construction skill requirements -->
    <uiIconScale>0.3</uiIconScale> <!-- UI scaling -->
    <killedLeavings>
      <ChunkSlagSteel>25</ChunkSlagSteel>
    </killedLeavings>
  </ThingDef>
  
  
  <!-- Strike -->
  <ThingDef ParentName="NECShipBase">
    <defName>Strike</defName> <!-- defName must be unique, including with other mods so be creative -->
    <label>Striker Fighter</label> <!-- name displayed ingame -->
    <description>The Strike fighter is a terran air interdiction unit fielded by Matt Horner and the Dominion Fleet during the End War against Amon, serving as tactical bombers. They can only carry one bomb, but they carry it FAST!
	
Passenger cap: 1
----------------------------
Speed: 75 tile/hr
Fuel capacity: 2500L
Fuel efficiency: 4 fuel/tile
----------------------------
Cargo capacity: 90 kg</description>
    <graphicData>
      <texPath>Vehicle/Strike/Strike</texPath>
      <graphicClass>Graphic_Multi</graphicClass>
      <drawSize>(7,7)</drawSize> <!-- how much the image is stretched out ingame -->
    </graphicData>
    <size>(3,3)</size> <!-- hitbox -->
    <statBases>
      <MaxHitPoints>600</MaxHitPoints> <!-- hitpoints of the building -->
      <WorkToBuild>10000</WorkToBuild> <!-- how much work it costs to build, which is more like a base type, as more properties affect it, resulting in a different final number for construction -->
      <Flammability>0</Flammability>
      <Mass>20</Mass> <!-- how much it weighs for a pawn to carry. My guess is they are light in this mod so pawns entering a map will throw it in their inventory rather than lose it, but i can check that later. -->
      <Beauty>5</Beauty> <!-- beauty on overlap, and for pawns -->
    </statBases>
    <costList> <!-- Costs to build, the names are the defNames of items -->
      <Steel>500</Steel>
      <Plasteel>100</Plasteel>
	  <Gold>10</Gold>
      <ComponentIndustrial>5</ComponentIndustrial>
	  <ComponentSpacer>2</ComponentSpacer>
    </costList>
    <comps>
      <li Class="CompProperties_Transporter">
        <restEffectiveness>0.75</restEffectiveness>
        <massCapacity>90</massCapacity>
      </li>
      <li Class="SRTS.CompProperties_LaunchableSRTS"> <!-- required for SRTS like functionality (ie. space ship reusable drop pod -->
        <travelSpeed>75</travelSpeed>
        <fuelPerTile>5</fuelPerTile>
        <minPassengers>1</minPassengers>
        <maxPassengers>1</maxPassengers>
      	<spaceFaring>true</spaceFaring>
      	<shuttleBayLanding>true</shuttleBayLanding>
      </li>
	  <li Class="SRTS.CompProperties_BombsAway"> <!-- include this comp if you want it to be able to carpet bomb, remove this comp if you dont -->
        <numberBombs>1</numberBombs> <!-- num dropped per run -->
        <precisionBombingNumBombs>1</precisionBombingNumBombs> <!-- number of bombs dropped in precise drop -->
        <radiusOfDrop>2</radiusOfDrop> <!-- how many cells out from the center the bombs may drop -->
        <speed>2</speed> <!-- How quickly the ship flies over. Default 1 -->
        <distanceBetweenDrops>2</distanceBetweenDrops> <!-- Distance in cells from when each bomb is dropped -->
	  </li>
      <li Class="CompProperties_Refuelable"> <!-- comp for allowing to fuel the srts, don't remove -->
        <fuelCapacity>2500</fuelCapacity>
        <targetFuelLevelConfigurable>true</targetFuelLevelConfigurable>
        <initialConfigurableTargetFuelLevel>150</initialConfigurableTargetFuelLevel>
        <fuelFilter>
          <thingDefs>
            <li>Chemfuel</li>
          </thingDefs>
        </fuelFilter>
        <consumeFuelOnlyWhenUsed>true</consumeFuelOnlyWhenUsed>
        <initialFuelPercent>0.25</initialFuelPercent>
        <autoRefuelPercent>1</autoRefuelPercent>
        <showFuelGizmo>true</showFuelGizmo>
        <drawOutOfFuelOverlay>false</drawOutOfFuelOverlay>
        <drawFuelGaugeInMap>false</drawFuelGaugeInMap>
      </li>
      <li Class="CompProperties_Breakdownable" />
      <li Class="CompProperties_Flickable" />
    </comps>
    <researchPrerequisites>
      <li>Strike</li>
    </researchPrerequisites>
    <constructionSkillPrerequisite>8</constructionSkillPrerequisite> <!-- construction skill requirements -->
    <uiIconScale>0.4</uiIconScale> <!-- UI scaling -->
    <killedLeavings>
      <ChunkSlagSteel>6</ChunkSlagSteel>
    </killedLeavings>
  </ThingDef>
  
   <!-- TAC -->
  <ThingDef ParentName="NECShipBase">
    <defName>TAC</defName> <!-- defName must be unique, including with other mods so be creative -->
    <label>Tactical Fighter</label> <!-- name displayed ingame -->
    <description>The tac fighter is a combat support ship, found inside capitals ships such as the Hyperion, not unlike aircraft carriers in old times.
	
Passenger cap: 1
----------------------------
Speed: 45 tile/hr
Fuel capacity: 1500L
Fuel efficiency: 3 fuel/tile
----------------------------
Cargo capacity: 100 kg</description>
    <graphicData>
      <texPath>Vehicle/Tac/Tac</texPath>
      <graphicClass>Graphic_Multi</graphicClass>
      <drawSize>(9,9)</drawSize> <!-- how much the image is stretched out ingame -->
    </graphicData>
    <size>(3,3)</size> <!-- hitbox -->
    <statBases>
      <MaxHitPoints>800</MaxHitPoints> <!-- hitpoints of the building -->
      <WorkToBuild>15000</WorkToBuild> <!-- how much work it costs to build, which is more like a base type, as more properties affect it, resulting in a different final number for construction -->
      <Flammability>0</Flammability>
      <Mass>20</Mass> <!-- how much it weighs for a pawn to carry. My guess is they are light in this mod so pawns entering a map will throw it in their inventory rather than lose it, but i can check that later. -->
      <Beauty>5</Beauty> <!-- beauty on overlap, and for pawns -->
    </statBases>
    <costList> <!-- Costs to build, the names are the defNames of items -->
      <Steel>1000</Steel>
      <Plasteel>200</Plasteel>
	  <Gold>15</Gold>
      <ComponentIndustrial>10</ComponentIndustrial>
	  <ComponentSpacer>5</ComponentSpacer>
    </costList>
    <comps>
      <li Class="CompProperties_Transporter">
        <restEffectiveness>0.75</restEffectiveness>
        <massCapacity>100</massCapacity>
      </li>
      <li Class="SRTS.CompProperties_LaunchableSRTS"> <!-- required for SRTS like functionality (ie. space ship reusable drop pod -->
        <travelSpeed>45</travelSpeed>
        <fuelPerTile>3</fuelPerTile>
        <minPassengers>1</minPassengers>
        <maxPassengers>1</maxPassengers>
      	<spaceFaring>true</spaceFaring>
      	<shuttleBayLanding>true</shuttleBayLanding>
      </li>
	  <li Class="SRTS.CompProperties_BombsAway"> <!-- include this comp if you want it to be able to carpet bomb, remove this comp if you dont -->
        <numberBombs>2</numberBombs> <!-- num dropped per run -->
        <precisionBombingNumBombs>2</precisionBombingNumBombs> <!-- number of bombs dropped in precise drop -->
        <radiusOfDrop>2</radiusOfDrop> <!-- how many cells out from the center the bombs may drop -->
        <speed>2</speed> <!-- How quickly the ship flies over. Default 1 -->
        <distanceBetweenDrops>1</distanceBetweenDrops> <!-- Distance in cells from when each bomb is dropped -->
	  </li>
      <li Class="CompProperties_Refuelable"> <!-- comp for allowing to fuel the srts, don't remove -->
        <fuelCapacity>1500</fuelCapacity>
        <targetFuelLevelConfigurable>true</targetFuelLevelConfigurable>
        <initialConfigurableTargetFuelLevel>150</initialConfigurableTargetFuelLevel>
        <fuelFilter>
          <thingDefs>
            <li>Chemfuel</li>
          </thingDefs>
        </fuelFilter>
        <consumeFuelOnlyWhenUsed>true</consumeFuelOnlyWhenUsed>
        <initialFuelPercent>0.25</initialFuelPercent>
        <autoRefuelPercent>1</autoRefuelPercent>
        <showFuelGizmo>true</showFuelGizmo>
        <drawOutOfFuelOverlay>false</drawOutOfFuelOverlay>
        <drawFuelGaugeInMap>false</drawFuelGaugeInMap>
      </li>
      <li Class="CompProperties_Breakdownable" />
      <li Class="CompProperties_Flickable" />
    </comps>
    <researchPrerequisites>
      <li>Tac</li>
    </researchPrerequisites>
    <constructionSkillPrerequisite>8</constructionSkillPrerequisite> <!-- construction skill requirements -->
    <uiIconScale>0.4</uiIconScale> <!-- UI scaling -->
    <killedLeavings>
      <ChunkSlagSteel>10</ChunkSlagSteel>
    </killedLeavings>
  </ThingDef>
  
  <!-- Viking -->
  <ThingDef ParentName="NECShipBase">
    <defName>Viking</defName> <!-- defName must be unique, including with other mods so be creative -->
    <label>Viking</label> <!-- name displayed ingame -->
    <description>The Brood War revealed weaknesses in terran anti-air capability. Wraith combat fighters and valkyrie missile frigates proved to be an unwieldy combination against agile zerg airborne organisms. In addition, ground-based anti-air support from goliath assault walkers was too limited in its mobility: all too often airborne attackers would simply move out of the goliath's range. In the aftermath of the war, terran weapon technicians proposed a radical new concept to resolve both of these problems; an armored vehicle with the ability to change its combat role from an assault walker to an air-superiority fighter, enabling it to switch smoothly to fulfill tactical needs in a developing battle.
	
Passenger cap: 1
----------------------------
Speed: 40 tile/hr
Fuel capacity: 2500L
Fuel efficiency: 3 fuel/tile
----------------------------
Cargo capacity: 200kg</description>
    <graphicData>
      <texPath>Vehicle/Viking/Viking</texPath>
      <graphicClass>Graphic_Multi</graphicClass>
      <drawSize>(8,8)</drawSize> <!-- how much the image is stretched out ingame -->
    </graphicData>
    <size>(3,4)</size> <!-- hitbox -->
    <statBases>
      <MaxHitPoints>1500</MaxHitPoints> <!-- hitpoints of the building -->
      <WorkToBuild>30000</WorkToBuild> <!-- how much work it costs to build, which is more like a base type, as more properties affect it, resulting in a different final number for construction -->
      <Flammability>0</Flammability>
      <Mass>20</Mass> <!-- how much it weighs for a pawn to carry. My guess is they are light in this mod so pawns entering a map will throw it in their inventory rather than lose it, but i can check that later. -->
      <Beauty>5</Beauty> <!-- beauty on overlap, and for pawns -->
    </statBases>
    <costList> <!-- Costs to build, the names are the defNames of items -->
      <Steel>3000</Steel>
      <Plasteel>600</Plasteel>
	  <Gold>70</Gold>
      <ComponentIndustrial>30</ComponentIndustrial>
	  <ComponentSpacer>15</ComponentSpacer>
    </costList>
    <comps>
      <li Class="CompProperties_Transporter">
        <restEffectiveness>0.75</restEffectiveness>
        <massCapacity>200</massCapacity>
      </li>
      <li Class="SRTS.CompProperties_LaunchableSRTS"> <!-- required for SRTS like functionality (ie. space ship reusable drop pod -->
        <travelSpeed>40</travelSpeed>
        <fuelPerTile>3</fuelPerTile>
        <minPassengers>1</minPassengers>
        <maxPassengers>1</maxPassengers>
      	<spaceFaring>true</spaceFaring>
      	<shuttleBayLanding>true</shuttleBayLanding>
      </li>
	  <li Class="SRTS.CompProperties_BombsAway"> <!-- include this comp if you want it to be able to carpet bomb, remove this comp if you dont -->
        <numberBombs>10</numberBombs> <!-- num dropped per run -->
        <precisionBombingNumBombs>10</precisionBombingNumBombs> <!-- number of bombs dropped in precise drop -->
        <radiusOfDrop>2</radiusOfDrop> <!-- how many cells out from the center the bombs may drop -->
        <speed>1</speed> <!-- How quickly the ship flies over. Default 1 -->
        <distanceBetweenDrops>2</distanceBetweenDrops> <!-- Distance in cells from when each bomb is dropped -->
	  </li>
      <li Class="CompProperties_Refuelable"> <!-- comp for allowing to fuel the srts, don't remove -->
        <fuelCapacity>3000</fuelCapacity>
        <targetFuelLevelConfigurable>true</targetFuelLevelConfigurable>
        <initialConfigurableTargetFuelLevel>150</initialConfigurableTargetFuelLevel>
        <fuelFilter>
          <thingDefs>
            <li>Chemfuel</li>
          </thingDefs>
        </fuelFilter>
        <consumeFuelOnlyWhenUsed>true</consumeFuelOnlyWhenUsed>
        <initialFuelPercent>0.25</initialFuelPercent>
        <autoRefuelPercent>1</autoRefuelPercent>
        <showFuelGizmo>true</showFuelGizmo>
        <drawOutOfFuelOverlay>false</drawOutOfFuelOverlay>
        <drawFuelGaugeInMap>false</drawFuelGaugeInMap>
      </li>
      <li Class="CompProperties_Breakdownable" />
      <li Class="CompProperties_Flickable" />
    </comps>
    <researchPrerequisites>
      <li>Viking</li>
    </researchPrerequisites>
    <constructionSkillPrerequisite>8</constructionSkillPrerequisite> <!-- construction skill requirements -->
    <uiIconScale>0.2</uiIconScale> <!-- UI scaling -->
    <killedLeavings>
      <ChunkSlagSteel>20</ChunkSlagSteel>
    </killedLeavings>
  </ThingDef>
  
  <!-- Wraith -->
  <ThingDef ParentName="NECShipBase">
    <defName>Wraith</defName> <!-- defName must be unique, including with other mods so be creative -->
    <label>Wraith</label> <!-- name displayed ingame -->
    <description>Wraiths primarily use missiles for their air/space attacks but can also use lasers for air/space targets. Against ground targets however, their lasers lack punch. Their armor provides little protection to the craft. Wraiths are known as "phantom killers," due to their onboard cloaking technology which was powered by their Apollo reactors, and in later conflicts came to be used alongside banshees for cloaked strike forces.
	
Passenger cap: 1
----------------------------
Speed: 60 tile/hr
Fuel capacity: 3000L
Fuel efficiency: 3 fuel/tile
----------------------------
Cargo capacity: 150kg</description>
    <graphicData>
      <texPath>Vehicle/Wraith/Wraith</texPath>
      <graphicClass>Graphic_Multi</graphicClass>
      <drawSize>(13,13)</drawSize> <!-- how much the image is stretched out ingame -->
    </graphicData>
    <size>(3,4)</size> <!-- hitbox -->
    <statBases>
      <MaxHitPoints>1000</MaxHitPoints> <!-- hitpoints of the building -->
      <WorkToBuild>30000</WorkToBuild> <!-- how much work it costs to build, which is more like a base type, as more properties affect it, resulting in a different final number for construction -->
      <Flammability>0</Flammability>
      <Mass>20</Mass> <!-- how much it weighs for a pawn to carry. My guess is they are light in this mod so pawns entering a map will throw it in their inventory rather than lose it, but i can check that later. -->
      <Beauty>5</Beauty> <!-- beauty on overlap, and for pawns -->
    </statBases>
    <costList> <!-- Costs to build, the names are the defNames of items -->
      <Steel>2800</Steel>
      <Plasteel>550</Plasteel>
	  <Gold>60</Gold>
      <ComponentIndustrial>25</ComponentIndustrial>
	  <ComponentSpacer>10</ComponentSpacer>
    </costList>
    <comps>
      <li Class="CompProperties_Transporter">
        <restEffectiveness>0.75</restEffectiveness>
        <massCapacity>150</massCapacity>
      </li>
      <li Class="SRTS.CompProperties_LaunchableSRTS"> <!-- required for SRTS like functionality (ie. space ship reusable drop pod -->
        <travelSpeed>60</travelSpeed>
        <fuelPerTile>3</fuelPerTile>
        <minPassengers>1</minPassengers>
        <maxPassengers>1</maxPassengers>
      	<spaceFaring>true</spaceFaring>
      	<shuttleBayLanding>true</shuttleBayLanding>
      </li>
	  <li Class="SRTS.CompProperties_BombsAway"> <!-- include this comp if you want it to be able to carpet bomb, remove this comp if you dont -->
        <numberBombs>8</numberBombs> <!-- num dropped per run -->
        <precisionBombingNumBombs>8</precisionBombingNumBombs> <!-- number of bombs dropped in precise drop -->
        <radiusOfDrop>2</radiusOfDrop> <!-- how many cells out from the center the bombs may drop -->
        <speed>1</speed> <!-- How quickly the ship flies over. Default 1 -->
        <distanceBetweenDrops>2</distanceBetweenDrops> <!-- Distance in cells from when each bomb is dropped -->
	  </li>
      <li Class="CompProperties_Refuelable"> <!-- comp for allowing to fuel the srts, don't remove -->
        <fuelCapacity>3000</fuelCapacity>
        <targetFuelLevelConfigurable>true</targetFuelLevelConfigurable>
        <initialConfigurableTargetFuelLevel>150</initialConfigurableTargetFuelLevel>
        <fuelFilter>
          <thingDefs>
            <li>Chemfuel</li>
          </thingDefs>
        </fuelFilter>
        <consumeFuelOnlyWhenUsed>true</consumeFuelOnlyWhenUsed>
        <initialFuelPercent>0.25</initialFuelPercent>
        <autoRefuelPercent>1</autoRefuelPercent>
        <showFuelGizmo>true</showFuelGizmo>
        <drawOutOfFuelOverlay>false</drawOutOfFuelOverlay>
        <drawFuelGaugeInMap>false</drawFuelGaugeInMap>
      </li>
      <li Class="CompProperties_Breakdownable" />
      <li Class="CompProperties_Flickable" />
    </comps>
    <researchPrerequisites>
      <li>Wraith</li>
    </researchPrerequisites>
    <constructionSkillPrerequisite>8</constructionSkillPrerequisite> <!-- construction skill requirements -->
    <uiIconScale>0.2</uiIconScale> <!-- UI scaling -->
    <killedLeavings>
      <ChunkSlagSteel>20</ChunkSlagSteel>
    </killedLeavings>
  </ThingDef>
  
  <!-- Valkyrie -->
  <ThingDef ParentName="NECShipBase">
    <defName>Valkyrie</defName> <!-- defName must be unique, including with other mods so be creative -->
    <label>Valkyrie</label> <!-- name displayed ingame -->
    <description>The Valkyrie missile frigate is an United Earth Directorate designed anti-fighter spacecraft. Equipped for both atmospheric and space flight, they lack the manuverability of lighter fighter craft; they rely on their heavy armor to survive combat. A Valkyrie can take substantial punishment from enemy fire before suffering any core systems failures.
	
Passenger cap: 1
----------------------------
Speed: 40 tile/hr
Fuel capacity: 5000L
Fuel efficiency: 4 fuel/tile
----------------------------
Cargo capacity: 350kg</description>
    <graphicData>
      <texPath>Vehicle/Valkyrie/Valkyrie</texPath>
      <graphicClass>Graphic_Multi</graphicClass>
      <drawSize>(33,33)</drawSize> <!-- how much the image is stretched out ingame -->
    </graphicData>
    <size>(13,14)</size> <!-- hitbox -->
    <statBases>
      <MaxHitPoints>3000</MaxHitPoints> <!-- hitpoints of the building -->
      <WorkToBuild>30000</WorkToBuild> <!-- how much work it costs to build, which is more like a base type, as more properties affect it, resulting in a different final number for construction -->
      <Flammability>0</Flammability>
      <Mass>20</Mass> <!-- how much it weighs for a pawn to carry. My guess is they are light in this mod so pawns entering a map will throw it in their inventory rather than lose it, but i can check that later. -->
      <Beauty>5</Beauty> <!-- beauty on overlap, and for pawns -->
    </statBases>
    <costList> <!-- Costs to build, the names are the defNames of items -->
      <Steel>3500</Steel>
      <Plasteel>750</Plasteel>
	  <Gold>80</Gold>
      <ComponentIndustrial>38</ComponentIndustrial>
	  <ComponentSpacer>16</ComponentSpacer>
    </costList>
    <comps>
      <li Class="CompProperties_Transporter">
        <restEffectiveness>0.75</restEffectiveness>
        <massCapacity>350</massCapacity>
      </li>
      <li Class="SRTS.CompProperties_LaunchableSRTS"> <!-- required for SRTS like functionality (ie. space ship reusable drop pod -->
        <travelSpeed>40</travelSpeed>
        <fuelPerTile>4</fuelPerTile>
        <minPassengers>1</minPassengers>
        <maxPassengers>3</maxPassengers>
      	<spaceFaring>true</spaceFaring>
      	<shuttleBayLanding>true</shuttleBayLanding>
      </li>
	  <li Class="SRTS.CompProperties_BombsAway"> <!-- include this comp if you want it to be able to carpet bomb, remove this comp if you dont -->
        <numberBombs>15</numberBombs> <!-- num dropped per run -->
        <precisionBombingNumBombs>15</precisionBombingNumBombs> <!-- number of bombs dropped in precise drop -->
        <radiusOfDrop>2</radiusOfDrop> <!-- how many cells out from the center the bombs may drop -->
        <speed>1</speed> <!-- How quickly the ship flies over. Default 1 -->
        <distanceBetweenDrops>2</distanceBetweenDrops> <!-- Distance in cells from when each bomb is dropped -->
	  </li>
      <li Class="CompProperties_Refuelable"> <!-- comp for allowing to fuel the srts, don't remove -->
        <fuelCapacity>5000</fuelCapacity>
        <targetFuelLevelConfigurable>true</targetFuelLevelConfigurable>
        <initialConfigurableTargetFuelLevel>150</initialConfigurableTargetFuelLevel>
        <fuelFilter>
          <thingDefs>
            <li>Chemfuel</li>
          </thingDefs>
        </fuelFilter>
        <consumeFuelOnlyWhenUsed>true</consumeFuelOnlyWhenUsed>
        <initialFuelPercent>0.25</initialFuelPercent>
        <autoRefuelPercent>1</autoRefuelPercent>
        <showFuelGizmo>true</showFuelGizmo>
        <drawOutOfFuelOverlay>false</drawOutOfFuelOverlay>
        <drawFuelGaugeInMap>false</drawFuelGaugeInMap>
      </li>
      <li Class="CompProperties_Breakdownable" />
      <li Class="CompProperties_Flickable" />
    </comps>
    <researchPrerequisites>
      <li>Valkyrie</li>
    </researchPrerequisites>
    <constructionSkillPrerequisite>8</constructionSkillPrerequisite> <!-- construction skill requirements -->
    <uiIconScale>0.2</uiIconScale> <!-- UI scaling -->
    <killedLeavings>
      <ChunkSlagSteel>26</ChunkSlagSteel>
    </killedLeavings>
  </ThingDef>
  
</Defs>