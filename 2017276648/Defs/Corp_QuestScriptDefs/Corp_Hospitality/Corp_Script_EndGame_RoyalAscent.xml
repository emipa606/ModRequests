<?xml version="1.0" encoding="utf-8" ?>
<Defs>

  <QuestScriptDef>
    <defName>Corp_EndGame_RoyalAscent</defName>
    <defaultChallengeRating>4</defaultChallengeRating>
    <isRootSpecial>true</isRootSpecial>
    <questNameRules>
      <rulesStrings>
        <li>questName(sameQuestsCount==0)->Corporate Ascent</li>
        <li>questName(sameQuestsCount>=1)->Corporate [titleEnd]</li>
        <li>titleEnd->Ascension</li>
        <li>titleEnd->Ascendance</li>
        <li>titleEnd->Visitor</li>
        <li>titleEnd->Guest</li>
        <li>titleEnd->Host</li>
        <li>titleEnd->Victory</li>
      </rulesStrings>
    </questNameRules>
    <questDescriptionRules>
      <include>
        <li>QuestHospitalityCommon</li>
      </include>
      <rulesStrings>
        <li>questDescription->[intro]The [asker_faction_leaderTitle] of [asker_faction_name] will perform a customary visit with any Executive in his holdings upon request. Invite him, satisfy his royal needs for [shuttleDelayTicks_duration], and all of you can ride the shuttle to the Corporate flotilla. You may then join the board of directors, or escape to a new life among the stars.
\nEarning the title of Executive means completing quests to earn [asker_faction_royalFavorLabel] with [asker_faction_name]. It may take years to finally achieve the rank of Executive.
\nDuring his visit, you must keep his mood above [lodgersMoodThreshold_percent]. This means providing executive perquisites like a lavish bedroom.[threatsInfo]
\nThe [asker_faction_leaderTitle] will bring five of his personal guards and place them under your command. You must house these guards, but the [asker_faction_leaderTitle] will not complain if they are killed or unhappy.
\nYou must keep the visitors at [map_definite] and not send them anywhere else. If you fail this quest or migrate, you will have another chance at it later.</li>

        <li>intro(sameQuestsCount==0)->You have learned of a way to escape this planet!\n\n</li>
        <li>intro(sameQuestsCount>=1)->You have been given another chance at corporate ascent.\n\n</li>

        <li>threatsInfo(allowViolentQuests==true,priority=1)->\n\nOthers will take the opportunity to try to kill the [asker_faction_leaderTitle], and will attack with great intensity. Be prepared to defend.</li>
        <li>threatsInfo-></li>
      </rulesStrings>
    </questDescriptionRules>
    <root Class="QuestNode_Sequence">
      <nodes>
        <li Class="QuestNode_GetMap" />

        <!-- End if map removed before the quest is accepted -->
        <li Class="QuestNode_End">
          <inSignal>map.MapRemoved</inSignal>
          <outcome>Fail</outcome>
          <signalListenMode>NotYetAcceptedOnly</signalListenMode>
        </li>

        <!-- For description -->
        <li Class="QuestNode_GetSameQuestsCount">
          <storeAs>sameQuestsCount</storeAs>
        </li>

        <!-- Get the stellarch -->
        <li Class="QuestNode_GetPawn">
          <storeAs>asker</storeAs>
          <mustBeFactionLeader>true</mustBeFactionLeader>
          <mustBeOfKind>Corp_CEO</mustBeOfKind>
          <ifWorldPawnThenMustBeFreeOrLeader>true</ifWorldPawnThenMustBeFreeOrLeader>
          <mustBeWorldPawn>true</mustBeWorldPawn> <!-- because we want to spawn him -->
        </li>

        <!-- Replace all stellarch's references with the new leader on death -->
        <li Class="QuestNode_ReplaceLostLeaderReferences">
          <inSignal>asker.NoLongerFactionLeader</inSignal>
          <signalListenMode>NotYetAcceptedOnly</signalListenMode>
        </li>

        <!-- Get or generate guards -->
        <li Class="QuestNode_LoopCount">
          <loopCount>4</loopCount>
          <node Class="QuestNode_GeneratePawn">
            <faction>CORP_Corporation</faction>
            <kindDef>Corp_BionicHeavyWeapons</kindDef>
            <addToList>lodgers</addToList>
            <biocodeWeaponChance>1</biocodeWeaponChance>
            <mustBeCapableOfViolence>true</mustBeCapableOfViolence>
          </node>
        </li>
        <li Class="QuestNode_LoopCount">
          <loopCount>1</loopCount>
          <node Class="QuestNode_GeneratePawn">
            <faction>CORP_Corporation</faction>
            <kindDef>Corp_BionicLeader</kindDef>
            <addToList>lodgers</addToList>
            <biocodeWeaponChance>1</biocodeWeaponChance>
            <mustBeCapableOfViolence>true</mustBeCapableOfViolence>
          </node>
        </li>

        <!-- Add the asker himself to the lodgers list -->
        <li Class="QuestNode_AddToList">
          <name>lodgers</name>
          <value>$asker</value>
        </li>

        <!-- Biocode asker's weapons (we took his reference manually, so we need to biocode his weapons manually) -->
        <li Class="QuestNode_BiocodeWeapons">
          <pawns>$asker</pawns>
        </li>

        <!-- Add a home faction to lodgers -->
        <li Class="QuestNode_ExtraFaction">
          <pawns>$lodgers</pawns>
          <faction>CORP_Corporation</faction>
          <factionType>HomeFaction</factionType>
        </li>

        <!-- Lock their apparel -->
        <li Class="QuestNode_SetAllApparelLocked">
          <pawns>$lodgers</pawns>
        </li>

        <!-- Make everyone leave on cleanup -->
        <li Class="QuestNode_LeaveOnCleanup">
          <pawns>$lodgers</pawns>
          <sendStandardLetter>false</sendStandardLetter>
        </li>

        <!-- Can only accept this quest if can satisfy all colonist and lodger bedroom requirements -->
        <li Class="QuestNode_RequirementsToAcceptColonistWithTitle">
          <minimumTitle>CORP_Executive</minimumTitle>
          <faction>CORP_Corporation</faction>
        </li>

        <!-- Can only accept this quest if can satisfy all colonist and lodger bedroom requirements -->
        <li Class="QuestNode_RequirementsToAcceptBedroom">
          <pawns>$lodgers</pawns>
        </li>

        <!-- Lodgers arrive by drop pods -->
        <li Class="QuestNode_DropPods">
          <contents>$lodgers</contents>
          <useTradeDropSpot>true</useTradeDropSpot>
          <joinPlayer>true</joinPlayer>
          <customLetterLabel>[asker_faction_leaderTitle] arrived</customLetterLabel>
          <customLetterText>The [asker_faction_leaderTitle] of [asker_faction_name], has arrived.\n\nProtect him and satisfy his pampered-ass until the shuttle arrives in [shuttleDelayTicks_duration].\n\nAll of you can accompany the [asker_faction_leaderTitle] on the shuttle and travel to the Corporate flotilla to begin a new life.</customLetterText>
        </li>

        <!-- Shuttle -->
        <li Class="QuestNode_Set">
          <name>shuttleDelayTicks</name>
          <value>600000</value>
        </li>
        <li Class="QuestNode_ShuttleDelay">
          <delayTicks>$shuttleDelayTicks</delayTicks>
          <lodgers>$asker</lodgers>
          <node Class="QuestNode_Sequence">
            <nodes>
              <li Class="QuestNode_GenerateShuttle">
                <requiredPawns>$asker</requiredPawns>
                <storeAs>shuttle</storeAs>
                <acceptColonists>true</acceptColonists>
              </li>
              <li Class="QuestNode_SpawnSkyfaller">
                <skyfallerDef>ShuttleIncoming</skyfallerDef>
                <innerThings>$shuttle</innerThings>
                <lookForSafeSpot>True</lookForSafeSpot>
                <factionOfForSafeSpot>$asker</factionOfForSafeSpot>
              </li>
              <li Class="QuestNode_SendShuttleAwayOnCleanup">
                <shuttle>$shuttle</shuttle>
              </li>
              <li Class="QuestNode_InspectString">
                <targets>$asker</targets>
                <inspectString>Should depart on shuttle</inspectString>
              </li>
              <li Class="QuestNode_Letter">
                <label>Shuttle arrived</label>
                <text>The shuttle has arrived to collect the [asker_faction_leaderTitle].\n\nAll of you can accompany the [asker_faction_leaderTitle] on the shuttle and travel to the Corporate flotilla to begin a new life.</text>
                <lookTargets>$shuttle</lookTargets>
              </li>
              <li Class="QuestNode_ShuttleLeaveDelay">
                <delayTicks>$(3*60000)</delayTicks>
                <shuttle>$shuttle</shuttle>
                <node Class="QuestNode_Sequence">
                  <nodes>
                    <li Class="QuestNode_SendShuttleAway"> <!-- this can complete the quest if the shuttle is already correctly loaded! -->
                      <shuttle>$shuttle</shuttle>
                    </li>
                    <li Class="QuestNode_End">
                      <outcome>Fail</outcome>
                    </li>
                  </nodes>
                </node>
              </li>

              <!-- Win condition -->
              <li Class="QuestNode_EndGame">
                <inSignal>shuttle.SentWithExtraColonists</inSignal>
                <signalListenMode>Always</signalListenMode> <!-- This happens after the quest has concluded -->
                <introText>You've escaped on the Imperial shuttle!</introText>
                <endingText>The chief executive officer will now welcome you into the Corporate flotilla as an honored guest.\n\nYou might stay on the board of directors and jockey for political power. Perhaps you'll avoid the drama and focus on enjoying an army of debt-slaves to do your bidding and every concievable luxury you can imagine. Or, you might even buy a ship and set a course for your long-lost home.\n\nThe choice is up to you.</endingText>
              </li>
            </nodes>
          </node>
        </li>

        <!-- - - - - -->
        <!-- Threats -->
        <!-- - - - - -->
        
        <li Class="QuestNode_Set">
          <name>enemyFaction</name>
          <value>Corp_HostileCorporation</value>
        </li>
        <li Class="QuestNode_ViolentQuestsAllowed">
          <node Class="QuestNode_GenerateThreats">
            <parms>
              <allowedThreats>Raids</allowedThreats>
              <onDays>1.0</onDays>
              <offDays>0.5</offDays>
              <minSpacingDays>0.04</minSpacingDays>
              <numIncidentsRange>1~2</numIncidentsRange>
              <currentThreatPointsFactor>2.0</currentThreatPointsFactor>
            </parms>
          </node>          
        </li>
        
        <!-- - - - - - - -  -->
        <!-- End conditions -->
        <!-- - - - - - - -  -->

        <!-- Any lodger unhappy -->
        <li Class="QuestNode_Set">
          <name>lodgersMoodThreshold</name>
          <value>0.25</value>
        </li>
        <li Class="QuestNode_MoodBelow">
          <pawns>$asker</pawns>
          <threshold>$lodgersMoodThreshold</threshold>
          <node Class="QuestNode_Sequence">
            <nodes>
              <li Class="QuestNode_Letter">
                <label>{SUBJECT_bestRoyalTitle} unhappy</label>
                <letterDef>NegativeEvent</letterDef>
                <text>{SUBJECT_definite}, who you were charged to protect and keep happy, has been below the minimum mood of [lodgersMoodThreshold] too long. [failLetterEndingCommon]</text>
              </li>
              <li Class="QuestNode_End">
                <outcome>Fail</outcome>
                <goodwillChangeAmount>-5</goodwillChangeAmount>
                <goodwillChangeFactionOf>$asker</goodwillChangeFactionOf>
              </li>
            </nodes>
          </node>
        </li>

        <!-- Asker died -->
        <li Class="QuestNode_Signal">
          <inSignal>asker.Destroyed</inSignal>
          <node Class="QuestNode_Sequence">
            <nodes>
              <li Class="QuestNode_Letter">
                <label>Guest died: {SUBJECT_definite}</label>
                <letterDef>NegativeEvent</letterDef>
                <text>{SUBJECT_definite}, who you were charged to protect, has died. [failLetterEndingCommon]</text>
                <signalListenMode>OngoingOrNotYetAccepted</signalListenMode>
              </li>
              <li Class="QuestNode_End">
                <outcome>Fail</outcome>
                <goodwillChangeAmount>-5</goodwillChangeAmount>
                <goodwillChangeFactionOf>$asker</goodwillChangeFactionOf>
                <signalListenMode>OngoingOrNotYetAccepted</signalListenMode>
              </li>
            </nodes>
          </node>
        </li>

        <!-- Lodger arrested -->
        <li Class="QuestNode_Signal">
          <inSignal>lodgers.Arrested</inSignal>
          <node Class="QuestNode_Sequence">
            <nodes>
              <li Class="QuestNode_Letter">
                <label>Guest captured: {SUBJECT_definite}</label>
                <letterDef>NegativeEvent</letterDef>
                <text>{SUBJECT_definite}, who you were charged to protect, has been arrested. [failLetterEndingCommon]</text>
              </li>
              <li Class="QuestNode_End">
                <outcome>Fail</outcome>
                <goodwillChangeAmount>-5</goodwillChangeAmount>
                <goodwillChangeFactionOf>$asker</goodwillChangeFactionOf>
              </li>
            </nodes>
          </node>
        </li>

        <!-- Surgery violation -->
        <li Class="QuestNode_Signal">
          <inSignal>lodgers.SurgeryViolation</inSignal>
          <node Class="QuestNode_Sequence">
            <nodes>
              <li Class="QuestNode_Letter">
                <label>Unauthorized surgery: {SUBJECT_definite}</label>
                <letterDef>NegativeEvent</letterDef>
                <text>Unauthorized, violating surgery has been performed on {SUBJECT_definite}, who you were charged to protect. [failLetterEndingCommon]</text>
              </li>
              <li Class="QuestNode_End">
                <outcome>Fail</outcome>
                <goodwillChangeAmount>-5</goodwillChangeAmount>
                <goodwillChangeFactionOf>$asker</goodwillChangeFactionOf>
              </li>
            </nodes>
          </node>
        </li>

        <!-- Lodger left map -->
        <li Class="QuestNode_Signal">
          <inSignal>asker.LeftMap</inSignal>
          <node Class="QuestNode_Sequence">
            <nodes>
              <li Class="QuestNode_Letter">
                <label>Guest lost: {SUBJECT_definite}</label>
                <letterDef>NegativeEvent</letterDef>
                <text>{SUBJECT_definite}, who you were charged to protect, has left the assigned settlement. [failLetterEndingCommon]</text>
              </li>
              <li Class="QuestNode_End">
                <outcome>Fail</outcome>
                <goodwillChangeAmount>-5</goodwillChangeAmount>
                <goodwillChangeFactionOf>$asker</goodwillChangeFactionOf>
              </li>
            </nodes>
          </node>
        </li>

        <!-- Shuttle destroyed -->
        <li Class="QuestNode_Signal">
          <inSignal>shuttle.Destroyed</inSignal>
          <node Class="QuestNode_Sequence">
            <nodes>
              <li Class="QuestNode_Letter">
                <label>Shuttle destroyed</label>
                <letterDef>NegativeEvent</letterDef>
                <text>The shuttle sent to collect the [asker_faction_leaderTitle] has been destroyed. [failLetterEndingCommon]</text>
              </li>
              <li Class="QuestNode_End">
                <outcome>Fail</outcome>
                <goodwillChangeAmount>-5</goodwillChangeAmount>
                <goodwillChangeFactionOf>$asker</goodwillChangeFactionOf>
              </li>
            </nodes>
          </node>
        </li>

        <!-- Shuttle sent away -->
        <li Class="QuestNode_Signal">
          <inSignal>shuttle.SentSatisfied</inSignal>
          <node Class="QuestNode_End">
            <outcome>Success</outcome>
            <sendStandardLetter>true</sendStandardLetter>
          </node>
        </li>
        <li Class="QuestNode_Signal">
          <inSignal>shuttle.SentUnsatisfied</inSignal>
          <node Class="QuestNode_Sequence">
            <nodes>
              <li Class="QuestNode_Letter">
                <label>Quest failed: [resolvedQuestName]</label>
                <letterDef>NegativeEvent</letterDef>
                <text>The shuttle sent to collect the [asker_faction_leaderTitle] has departed without him. He will now leave on foot. [failLetterEndingCommon]</text>
              </li>
              <li Class="QuestNode_End">
                <outcome>Fail</outcome>
                <goodwillChangeAmount>-5</goodwillChangeAmount>
                <goodwillChangeFactionOf>$asker</goodwillChangeFactionOf>
              </li>
            </nodes>
          </node>
        </li>
      </nodes>

    </root>
  </QuestScriptDef>
  
</Defs>