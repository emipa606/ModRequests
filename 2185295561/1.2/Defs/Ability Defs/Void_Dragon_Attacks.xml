<?xml version="1.0" encoding="UTF-8"?>
<Defs>

  <!--====================== Void Dragon Breath ==========================-->
  
    <AbilityDef>
        <defName>VoidDragonBreath</defName>
        <label>void dragon breath</label>
        <description>Fire a volley of explosive dark bolts.</description>
        <abilityClass>DD.Ability_Base</abilityClass>
        <canUseAoeToGetTargets>true</canUseAoeToGetTargets>
        <cooldownTicksRange>2000~3000</cooldownTicksRange>
        <displayGizmoWhileUndrafted>true</displayGizmoWhileUndrafted>
        <disableGizmoWhileUndrafted>false</disableGizmoWhileUndrafted>
		<iconPath>Things/Pawn/Projectiles/SingularityBreath</iconPath>
        <verbProperties>
            <verbClass>DD.Verb_CastAbility_Base</verbClass>
			
			<!-- Make sure range and minRange matches the CastVerb's range and minRanges -->
			<range>55</range>
            <minRange>5</minRange>
			
			<!-- Warmup time is better in the ability's casting verb -->
			<warmupTime>1.55</warmupTime>
			
			<!-- Projectile defined here just for the targeting when you click the gizmo, the CastVerb's projectile is the actual one that will cause damage -->
			<defaultProjectile>Projectile_VoidDragonBreath</defaultProjectile>
			
			<!-- Targeting parameters to stop the verb from firing unless the target type matches -->
			<targetParams>
				<canTargetPawns>true</canTargetPawns>
				<canTargetLocations>true</canTargetLocations>
			</targetParams>
			
			<!-- Controls how likely the ability will get picked. -->
			<commonality>2</commonality>
        </verbProperties>
        <comps>
            <li Class="DD.AbilityCompProperties_AbilityControl">
                <compClass>DD.AbilityComp_AbilityControl</compClass>
				<!-- Allows the ability.verb to be picked up by Pawn.TryGetAttackVerb -->
                <autoUse>true</autoUse>
                <gizmoOnText>Breath Enabled</gizmoOnText>
                <gizmoOffText>Breath Disabled</gizmoOffText>
                <gizmoOnIconPath>AnimalProjectile/DragonFire</gizmoOnIconPath>
                <gizmoOffIconPath>AnimalProjectile/DragonFire</gizmoOffIconPath>
                <gizmoDesc>Toggle Dragon Breath Usage</gizmoDesc>
            </li>
            <li Class="DD.AbilityCompProperties_CastVerb">
                <compClass>DD.AbilityComp_CastVerb</compClass>
				<!-- Verbs defined here will be actually triggered when the ability activates. -->
                <verbProperties>
                    <li>
                        <verbClass>Verb_Shoot</verbClass>
                        <accuracyTouch>0.50</accuracyTouch>
                        <accuracyShort>0.40</accuracyShort>
                        <accuracyMedium>0.30</accuracyMedium>
                        <accuracyLong>0.20</accuracyLong>
                        <defaultProjectile>Projectile_VoidDragonBreath</defaultProjectile>
                        <range>55</range>
						<minRange>5</minRange>
                        <burstShotCount>15</burstShotCount>
                        <ticksBetweenBurstShots>2</ticksBetweenBurstShots>
                        <soundCast>DD_Void_FireBreath</soundCast>
                        <muzzleFlashScale>5</muzzleFlashScale>
                    </li>
                </verbProperties>
            </li>
			<li Class="DD.AbilityCompProperties_Cooldown">
                <compClass>DD.AbilityComp_Cooldown</compClass>
				
				<!-- Ability cooldown pool -->
				<cooldownPool>DragonBreathPool</cooldownPool>
				
				<!-- Cooldown ticks range (omit to use each verb's default <cooldownTicksRange>) -->
				<cooldownTicksRange>1000</cooldownTicksRange>
				
				<!-- Unaffected by other abilities cooling down in the same pool -->
				<independent>false</independent>
				
				<!-- Resets the other cooldowns in the pool even if they're already cooling down -->
				<resetsTimer>true</resetsTimer>
			</li>
        </comps>
    </AbilityDef>
	<!--====================== Nebula Dragon Breath ==========================-->
	<AbilityDef>
        <defName>NebulaDragonBreath</defName>
        <label>nebula dragon breath</label>
        <description>Fire a volley of fire that does not ignite surrounding areas.</description>
        <abilityClass>DD.Ability_Base</abilityClass>
        <canUseAoeToGetTargets>true</canUseAoeToGetTargets>
        <cooldownTicksRange>1500~2000</cooldownTicksRange>
        <displayGizmoWhileUndrafted>true</displayGizmoWhileUndrafted>
        <disableGizmoWhileUndrafted>false</disableGizmoWhileUndrafted>
		<iconPath>Things/Pawn/Projectiles/NebulaBreath</iconPath>
        <verbProperties>
            <verbClass>DD.Verb_CastAbility_Base</verbClass>
			
			<!-- Make sure range and minRange matches the CastVerb's range and minRanges -->
			<range>51</range>
            <minRange>8</minRange>
			
			<!-- Warmup time is better in the ability's casting verb -->
			<warmupTime>2.75</warmupTime>
			
			<!-- Projectile defined here just for the targeting when you click the gizmo, the CastVerb's projectile is the actual one that will cause damage -->
			<defaultProjectile>Projectile_NebulaDragonBreath</defaultProjectile>
			
			<!-- Targeting parameters to stop the verb from firing unless the target type matches -->
			<targetParams>
				<canTargetPawns>true</canTargetPawns>
				<canTargetLocations>true</canTargetLocations>
			</targetParams>
			
			<!-- Controls how likely the ability will get picked. -->
			<commonality>2</commonality>
        </verbProperties>
        <comps>
            <li Class="DD.AbilityCompProperties_AbilityControl">
                <compClass>DD.AbilityComp_AbilityControl</compClass>
				<!-- Allows the ability.verb to be picked up by Pawn.TryGetAttackVerb -->
                <autoUse>true</autoUse>
                <gizmoOnText>Breath Enabled</gizmoOnText>
                <gizmoOffText>Breath Disabled</gizmoOffText>
                <gizmoOnIconPath>AnimalProjectile/DragonFire</gizmoOnIconPath>
                <gizmoOffIconPath>AnimalProjectile/DragonFire</gizmoOffIconPath>
                <gizmoDesc>Toggle Dragon Breath Usage</gizmoDesc>
            </li>
            <li Class="DD.AbilityCompProperties_CastVerb">
                <compClass>DD.AbilityComp_CastVerb</compClass>
				<!-- Verbs defined here will be actually triggered when the ability activates. -->
                <verbProperties>
                    <li>
                        <verbClass>Verb_Shoot</verbClass>
                        <accuracyTouch>0.50</accuracyTouch>
                        <accuracyShort>0.40</accuracyShort>
                        <accuracyMedium>0.30</accuracyMedium>
                        <accuracyLong>0.20</accuracyLong>
                        <defaultProjectile>Projectile_NebulaDragonBreath</defaultProjectile>
                        <range>51</range>
						<minRange>8</minRange>
                        <burstShotCount>33</burstShotCount>
                        <ticksBetweenBurstShots>4</ticksBetweenBurstShots>
                        <soundCast>DD_Void_FireBreath</soundCast>
                        <muzzleFlashScale>5</muzzleFlashScale>
                    </li>
                </verbProperties>
            </li>
			<li Class="DD.AbilityCompProperties_Cooldown">
                <compClass>DD.AbilityComp_Cooldown</compClass>
				
				<!-- Ability cooldown pool -->
				<cooldownPool>DragonBreathPool</cooldownPool>
				
				<!-- Cooldown ticks range (omit to use each verb's default <cooldownTicksRange>) -->
				<cooldownTicksRange>1000</cooldownTicksRange>
				
				<!-- Unaffected by other abilities cooling down in the same pool -->
				<independent>false</independent>
				
				<!-- Resets the other cooldowns in the pool even if they're already cooling down -->
				<resetsTimer>true</resetsTimer>
			</li>
        </comps>
    </AbilityDef>
	<!--====================== Aurelion Dragon Breath ==========================-->
	<AbilityDef>
        <defName>AurelionDragonBreath</defName>
        <label>rurelion dragon breath</label>
        <description>Fire several powerful and highly explosive shots.</description>
        <abilityClass>DD.Ability_Base</abilityClass>
        <canUseAoeToGetTargets>true</canUseAoeToGetTargets>
        <cooldownTicksRange>2000~3750</cooldownTicksRange>
        <displayGizmoWhileUndrafted>true</displayGizmoWhileUndrafted>
        <disableGizmoWhileUndrafted>false</disableGizmoWhileUndrafted>
		<iconPath>Things/Pawn/Projectiles/AurelionBreath</iconPath>
        <verbProperties>
            <verbClass>DD.Verb_CastAbility_Base</verbClass>
			
			<range>55</range>
            <minRange>9</minRange>
			<warmupTime>2.05</warmupTime>
			<defaultProjectile>Projectile_AurelionDragonBreath</defaultProjectile>
			<targetParams>
				<canTargetPawns>true</canTargetPawns>
				<canTargetLocations>true</canTargetLocations>
			</targetParams>
			<commonality>2</commonality>
        </verbProperties>
        <comps>
            <li Class="DD.AbilityCompProperties_AbilityControl">
                <compClass>DD.AbilityComp_AbilityControl</compClass>
                <autoUse>true</autoUse>
                <gizmoOnText>Breath Enabled</gizmoOnText>
                <gizmoOffText>Breath Disabled</gizmoOffText>
                <gizmoOnIconPath>AnimalProjectile/DragonFire</gizmoOnIconPath>
                <gizmoOffIconPath>AnimalProjectile/DragonFire</gizmoOffIconPath>
                <gizmoDesc>Toggle Dragon Breath Usage</gizmoDesc>
            </li>
            <li Class="DD.AbilityCompProperties_CastVerb">
                <compClass>DD.AbilityComp_CastVerb</compClass>
				<!-- Verbs defined here will be actually triggered when the ability activates. -->
                <verbProperties>
                    <li>
                        <verbClass>Verb_Shoot</verbClass>
                        <accuracyTouch>0.50</accuracyTouch>
                        <accuracyShort>0.40</accuracyShort>
                        <accuracyMedium>0.30</accuracyMedium>
                        <accuracyLong>0.40</accuracyLong>
                        <defaultProjectile>Projectile_AurelionDragonBreath</defaultProjectile>
                        <range>55</range>
						<minRange>9</minRange>
                        <burstShotCount>5</burstShotCount>
                        <ticksBetweenBurstShots>6</ticksBetweenBurstShots>
                        <soundCast>DD_Void_FireBreath</soundCast>
                        <muzzleFlashScale>11</muzzleFlashScale>
                    </li>
                </verbProperties>
            </li>
			<li Class="DD.AbilityCompProperties_Cooldown">
                <compClass>DD.AbilityComp_Cooldown</compClass>
				
				<!-- Ability cooldown pool -->
				<cooldownPool>DragonBreathPool</cooldownPool>
				
				<!-- Cooldown ticks range (omit to use each verb's default <cooldownTicksRange>) -->
				<cooldownTicksRange>2200</cooldownTicksRange>
				
				<!-- Unaffected by other abilities cooling down in the same pool -->
				<independent>false</independent>
				
				<!-- Resets the other cooldowns in the pool even if they're already cooling down -->
				<resetsTimer>true</resetsTimer>
			</li>
        </comps>
    </AbilityDef>
	
	<!--====================== Star Dust Breath ==========================-->
  
    <AbilityDef>
        <defName>StarDustBreath</defName>
        <label>star dust breath</label>
        <description>Fire few shots of stardust that causes EMP damage.</description>
        <abilityClass>DD.Ability_Base</abilityClass>
        <canUseAoeToGetTargets>true</canUseAoeToGetTargets>
        <cooldownTicksRange>3000~5000</cooldownTicksRange>
        <displayGizmoWhileUndrafted>true</displayGizmoWhileUndrafted>
        <disableGizmoWhileUndrafted>false</disableGizmoWhileUndrafted>
		<iconPath>Things/Pawn/Projectiles/SolarBreath</iconPath>
        <verbProperties>
            <verbClass>DD.Verb_CastAbility_Base</verbClass>
			
			<!-- Make sure range and minRange matches the CastVerb's range and minRanges -->
			<range>39</range>
            <minRange>3</minRange>
			
			<!-- Warmup time is better in the ability's casting verb -->
			<warmupTime>2.75</warmupTime>
			
			<!-- Projectile defined here just for the targeting when you click the gizmo, the CastVerb's projectile is the actual one that will cause damage -->
			<defaultProjectile>Projectile_StarDustBreath</defaultProjectile>
			
			<!-- Targeting parameters to stop the verb from firing unless the target type matches -->
			<targetParams>
				<canTargetPawns>true</canTargetPawns>
				<canTargetLocations>true</canTargetLocations>
			</targetParams>
			
			<!-- Controls how likely the ability will get picked. -->
			<commonality>0</commonality>
        </verbProperties>
        <comps>
            <li Class="DD.AbilityCompProperties_AbilityControl">
                <compClass>DD.AbilityComp_AbilityControl</compClass>
				<!-- Allows the ability.verb to be picked up by Pawn.TryGetAttackVerb -->
                <autoUse>true</autoUse>
                <gizmoOnText>Breath Enabled</gizmoOnText>
                <gizmoOffText>Breath Disabled</gizmoOffText>
                <gizmoOnIconPath>AnimalProjectile/DragonFire</gizmoOnIconPath>
                <gizmoOffIconPath>AnimalProjectile/DragonFire</gizmoOffIconPath>
                <gizmoDesc>Toggle Dragon Breath Usage</gizmoDesc>
            </li>
            <li Class="DD.AbilityCompProperties_CastVerb">
                <compClass>DD.AbilityComp_CastVerb</compClass>
				<!-- Verbs defined here will be actually triggered when the ability activates. -->
                <verbProperties>
                    <li>
                        <verbClass>Verb_Shoot</verbClass>
                        <accuracyTouch>0.40</accuracyTouch>
                        <accuracyShort>0.30</accuracyShort>
                        <accuracyMedium>0.37</accuracyMedium>
                        <accuracyLong>0.10</accuracyLong>
                        <defaultProjectile>Projectile_StarDustBreath</defaultProjectile>
                        <range>39</range>
						<minRange>3</minRange>
                        <burstShotCount>5</burstShotCount>
                        <ticksBetweenBurstShots>5</ticksBetweenBurstShots>
                        <soundCast>DD_Void_FireBreath</soundCast>
                        <muzzleFlashScale>9</muzzleFlashScale>
                    </li>
                </verbProperties>
            </li>
			<li Class="DD.AbilityCompProperties_Cooldown">
                <compClass>DD.AbilityComp_Cooldown</compClass>
				
				<!-- Ability cooldown pool -->
				<cooldownPool>DragonBreathPool</cooldownPool>
				
				<!-- Cooldown ticks range (omit to use each verb's default <cooldownTicksRange>) -->
				<cooldownTicksRange>3000</cooldownTicksRange>
				
				<!-- Unaffected by other abilities cooling down in the same pool -->
				<independent>true</independent>
				
				<!-- Resets the other cooldowns in the pool even if they're already cooling down -->
				<resetsTimer>false</resetsTimer>
			</li>
        </comps>
    </AbilityDef>
	
		<!--====================== Molten Breath ==========================-->
  
    <AbilityDef>
        <defName>MoltenBreath</defName>
        <label>molten breath</label>
        <description>Fire magma at the target causing moderate damage. Ignores most, if not all armor.</description>
        <abilityClass>DD.Ability_Base</abilityClass>
        <canUseAoeToGetTargets>true</canUseAoeToGetTargets>
        <cooldownTicksRange>3000~5000</cooldownTicksRange>
        <displayGizmoWhileUndrafted>true</displayGizmoWhileUndrafted>
        <disableGizmoWhileUndrafted>false</disableGizmoWhileUndrafted>
		<iconPath>Things/Pawn/Projectiles/MoltenBreath</iconPath>
        <verbProperties>
            <verbClass>DD.Verb_CastAbility_Base</verbClass>
			
			<!-- Make sure range and minRange matches the CastVerb's range and minRanges -->
			<range>31</range>
            <minRange>6</minRange>
			
			<!-- Warmup time is better in the ability's casting verb -->
			<warmupTime>3.05</warmupTime>
			
			<!-- Projectile defined here just for the targeting when you click the gizmo, the CastVerb's projectile is the actual one that will cause damage -->
			<defaultProjectile>Projectile_MoltenBreath</defaultProjectile>
			
			<!-- Targeting parameters to stop the verb from firing unless the target type matches -->
			<targetParams>
				<canTargetPawns>true</canTargetPawns>
				<canTargetLocations>true</canTargetLocations>
			</targetParams>
			
			<!-- Controls how likely the ability will get picked. -->
			<commonality>0</commonality>
        </verbProperties>
        <comps>
            <li Class="DD.AbilityCompProperties_AbilityControl">
                <compClass>DD.AbilityComp_AbilityControl</compClass>
				<!-- Allows the ability.verb to be picked up by Pawn.TryGetAttackVerb -->
                <autoUse>true</autoUse>
                <gizmoOnText>Breath Enabled</gizmoOnText>
                <gizmoOffText>Breath Disabled</gizmoOffText>
                <gizmoOnIconPath>AnimalProjectile/DragonFire</gizmoOnIconPath>
                <gizmoOffIconPath>AnimalProjectile/DragonFire</gizmoOffIconPath>
                <gizmoDesc>Toggle Dragon Breath Usage</gizmoDesc>
            </li>
            <li Class="DD.AbilityCompProperties_CastVerb">
                <compClass>DD.AbilityComp_CastVerb</compClass>
				<!-- Verbs defined here will be actually triggered when the ability activates. -->
                <verbProperties>
                    <li>
                        <verbClass>Verb_Shoot</verbClass>
                        <accuracyTouch>0.74</accuracyTouch>
                        <accuracyShort>0.66</accuracyShort>
                        <accuracyMedium>0.43</accuracyMedium>
                        <accuracyLong>0.06</accuracyLong>
                        <defaultProjectile>Projectile_MoltenBreath</defaultProjectile>
                        <range>31</range>
						<minRange>6</minRange>
                        <burstShotCount>8</burstShotCount>
                        <ticksBetweenBurstShots>11</ticksBetweenBurstShots>
                        <soundCast>DD_Void_FireBreath</soundCast>
                        <muzzleFlashScale>16</muzzleFlashScale>
                    </li>
                </verbProperties>
            </li>
			<li Class="DD.AbilityCompProperties_Cooldown">
                <compClass>DD.AbilityComp_Cooldown</compClass>
				
				<!-- Ability cooldown pool -->
				<cooldownPool>DragonBreathPool</cooldownPool>
				
				<!-- Cooldown ticks range (omit to use each verb's default <cooldownTicksRange>) -->
				<cooldownTicksRange>3000</cooldownTicksRange>
				
				<!-- Unaffected by other abilities cooling down in the same pool -->
				<independent>true</independent>
				
				<!-- Resets the other cooldowns in the pool even if they're already cooling down -->
				<resetsTimer>false</resetsTimer>
			</li>
        </comps>
    </AbilityDef>
</Defs>